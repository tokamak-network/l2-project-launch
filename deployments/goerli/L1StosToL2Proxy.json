{
  "address": "0x86Ed13C79DB599e501AE9Ac21d047bcFA6B5a245",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "alive",
          "type": "bool"
        }
      ],
      "name": "SetAliveImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "SetSelectorImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aliveImplementation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "getSelectorImplementation2",
      "outputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "implementation2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Register",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTos",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLockCountPerRegister",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseProxy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proxyImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceManagership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "selectorImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressManagerAddress",
          "type": "address"
        }
      ],
      "name": "setAddressManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_alive",
          "type": "bool"
        }
      ],
      "name": "setAliveImplementation2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_alive",
          "type": "bool"
        }
      ],
      "name": "setImplementation2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l2Register_",
          "type": "address"
        }
      ],
      "name": "setL2Register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lockTosAddress",
          "type": "address"
        }
      ],
      "name": "setLockTos",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxLockCountPerRegister_",
          "type": "uint256"
        }
      ],
      "name": "setMaxLockCountPerRegister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "setProxyPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        },
        {
          "internalType": "address",
          "name": "_imp",
          "type": "address"
        }
      ],
      "name": "setSelectorImplementations2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "syncInfoOfLockId",
      "outputs": [
        {
          "internalType": "int256",
          "name": "slope",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "bias",
          "type": "int256"
        },
        {
          "internalType": "uint32",
          "name": "timestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "syncTime",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "transferManagership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf8e0db14abf880b156e3a0d6dc81e7a171fa727383735fa26f3fabcc315b410f",
  "receipt": {
    "to": null,
    "from": "0xc1eba383D94c6021160042491A5dfaF1d82694E6",
    "contractAddress": "0x86Ed13C79DB599e501AE9Ac21d047bcFA6B5a245",
    "transactionIndex": 10,
    "gasUsed": "1411196",
    "logsBloom": "0x
    "blockHash": "0xd07e6454021b9f18e8f1922bbfabad74324bc680247bde6caaf4babd5d611c94",
    "transactionHash": "0xf8e0db14abf880b156e3a0d6dc81e7a171fa727383735fa26f3fabcc315b410f",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 10430171,
        "transactionHash": "0xf8e0db14abf880b156e3a0d6dc81e7a171fa727383735fa26f3fabcc315b410f",
        "address": "0x86Ed13C79DB599e501AE9Ac21d047bcFA6B5a245",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c1eba383d94c6021160042491a5dfaf1d82694e6"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0xd07e6454021b9f18e8f1922bbfabad74324bc680247bde6caaf4babd5d611c94"
      }
    ],
    "blockNumber": 10430171,
    "cumulativeGasUsed": "2087414",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6d04a6cdccfcb7febd8e3a19d630a74b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"alive\",\"type\":\"bool\"}],\"name\":\"SetAliveImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"SetSelectorImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aliveImplementation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"getSelectorImplementation2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"implementation2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Register\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLockCountPerRegister\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"selectorImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressManagerAddress\",\"type\":\"address\"}],\"name\":\"setAddressManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_alive\",\"type\":\"bool\"}],\"name\":\"setAliveImplementation2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_alive\",\"type\":\"bool\"}],\"name\":\"setImplementation2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l2Register_\",\"type\":\"address\"}],\"name\":\"setL2Register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lockTosAddress\",\"type\":\"address\"}],\"name\":\"setLockTos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLockCountPerRegister_\",\"type\":\"uint256\"}],\"name\":\"setMaxLockCountPerRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setProxyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"address\",\"name\":\"_imp\",\"type\":\"address\"}],\"name\":\"setSelectorImplementations2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"syncInfoOfLockId\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"slope\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"bias\",\"type\":\"int256\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"syncTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"transferManagership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSelectorImplementation2(bytes4)\":{\"details\":\"view implementation address of selector of function\",\"params\":{\"_selector\":\"selector of function\"},\"returns\":{\"impl\":\"address of the implementation\"}},\"implementation()\":{\"details\":\"returns the implementation\"},\"implementation2(uint256)\":{\"details\":\"view implementation address of the proxy[index]\",\"params\":{\"_index\":\"index of proxy\"},\"returns\":{\"_0\":\"address of the implementation\"}},\"setAliveImplementation2(address,bool)\":{\"details\":\"set alive status of implementation\",\"params\":{\"_alive\":\"alive status\",\"newImplementation\":\"Address of the new implementation.\"}},\"setImplementation2(address,uint256,bool)\":{\"details\":\"set the implementation address and status of the proxy[index]\",\"params\":{\"_alive\":\"_alive\",\"_index\":\"index\",\"newImplementation\":\"Address of the new implementation.\"}},\"setProxyPause(bool)\":{\"params\":{\"_pause\":\"true:pause or false:resume\"}},\"setSelectorImplementations2(bytes4[],address)\":{\"details\":\"set selectors of Implementation\",\"params\":{\"_imp\":\"implementation address\",\"_selectors\":\"being added selectors\"}},\"upgradeTo(address)\":{\"params\":{\"impl\":\"New implementation contract address\"}},\"upgradeToAndCall(address,bytes)\":{\"params\":{\"_data\":\"Calldata to delegatecall the new implementation with.\",\"_implementation\":\"Address of the implementation contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setProxyPause(bool)\":{\"notice\":\"Set pause state\"},\"upgradeTo(address)\":{\"notice\":\"Set implementation contract\"},\"upgradeToAndCall(address,bytes)\":{\"notice\":\"Set the implementation and call a function in a single transaction. Useful to ensure         atomic execution of initialization-based upgrades.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/L1StosToL2Proxy.sol\":\"L1StosToL2Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":625},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/L1/L1StosToL2Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../proxy/Proxy2.sol\\\";\\nimport \\\"./L1StosToL2Storage.sol\\\";\\n\\ncontract L1StosToL2Proxy is Proxy2, L1StosToL2Storage\\n{\\n    event ManagershipTransferred(address indexed previousManager, address indexed newManager);\\n\\n    constructor() {\\n        _manager = msg.sender;\\n    }\\n\\n    function setMaxLockCountPerRegister(uint256 maxLockCountPerRegister_) external onlyManager {\\n        require(maxLockCountPerRegister != maxLockCountPerRegister_, \\\"same\\\");\\n        maxLockCountPerRegister = maxLockCountPerRegister_;\\n    }\\n\\n\\n    function setLockTos(address lockTosAddress) external onlyManager {\\n        require(lockTos != lockTosAddress, \\\"same\\\");\\n        lockTos = lockTosAddress;\\n    }\\n\\n    function setL2Register(address l2Register_) external onlyManager {\\n        require(l2Register != l2Register_, \\\"same\\\");\\n        l2Register = l2Register_;\\n    }\\n\\n    function setAddressManager(address addressManagerAddress) external onlyManager {\\n        require(addressManager != addressManagerAddress, \\\"same\\\");\\n        addressManager = addressManagerAddress;\\n    }\\n\\n    function renounceManagership() external onlyManager {\\n        emit ManagershipTransferred(_manager, address(0));\\n        _manager = address(0);\\n    }\\n\\n    function transferManagership(address newManager) external onlyManager {\\n        require(newManager != address(0), \\\"new manager is the zero address\\\");\\n        emit ManagershipTransferred(_manager, newManager);\\n        _manager = newManager;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb23fd253d1e633a44883e787ef130e886e7cf97bef59d4d240cb6618230918bf\",\"license\":\"MIT\"},\"contracts/L1/L1StosToL2Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../libraries/LibLockId.sol\\\";\\n\\ncontract L1StosToL2Storage  {\\n    uint256 public maxLockCountPerRegister;\\n    address public _manager;\\n    address public addressManager;\\n    address public lockTos;\\n    address public l2Register;\\n    uint32 minGasLimitRegister;\\n\\n    // account-lockId-sync\\ub41c \\uc815\\ubcf4 (\\ud788\\uc2a4\\ud1a0\\ub9ac\\uc758 \\uc778\\ub371\\uc2a4 \\ubc88\\ud638, time)\\n    mapping(uint256 => LibLockId.SyncInfo) public syncInfoOfLockId;\\n    bool internal _lock;\\n\\n    modifier onlyManager() {\\n        require(_manager == msg.sender, \\\"not manager\\\");\\n        _;\\n    }\\n\\n    modifier ifFree {\\n        require(_lock != true, \\\"in use\\\");\\n        _lock = true;\\n        _;\\n        _lock = false;\\n    }\\n}\\n\",\"keccak256\":\"0x73870fa2e27b4e9a6c34ba2bfa7fbf818f70bc3340b86072b5e693061ed30c82\",\"license\":\"MIT\"},\"contracts/interfaces/IProxyAction.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n/// @title IProxyAction\\ninterface IProxyAction {\\n\\n    /// @dev set the implementation address and status of the proxy[index]\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _index index\\n    /// @param _alive _alive\\n    function setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) external;\\n\\n\\n    /// @dev set alive status of implementation\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _alive alive status\\n    function setAliveImplementation2(address newImplementation, bool _alive)\\n        external;\\n\\n\\n    /// @dev set selectors of Implementation\\n    /// @param _selectors being added selectors\\n    /// @param _imp implementation address\\n    function setSelectorImplementations2(\\n        bytes4[] calldata _selectors,\\n        address _imp\\n    ) external  ;\\n\\n\\n\\n    /// onlyOwner\\n\\n    /// @notice Set pause state\\n    /// @param _pause true:pause or false:resume\\n    function setProxyPause(bool _pause) external ;\\n\\n\\n    /// anybody\\n\\n    /// @dev view implementation address of selector of function\\n    /// @param _selector selector of function\\n    /// @return impl address of the implementation\\n    function getSelectorImplementation2(bytes4 _selector)\\n        external\\n        view\\n        returns (address impl);\\n\\n\\n    /// @dev view implementation address of the proxy[index]\\n    /// @param _index index of proxy\\n    /// @return address of the implementation\\n    function implementation2(uint256 _index) external view returns (address) ;\\n}\\n\\n\",\"keccak256\":\"0x16ff956d9ccccadd56ce168390a7daa64883fda68f00dbf5110ae67bceaa6fcb\",\"license\":\"Unlicense\"},\"contracts/interfaces/IProxyEvent.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n/// @title IProxyEvent\\ninterface IProxyEvent {\\n\\n    event Upgraded(address indexed implementation);\\n\\n    event SetAliveImplementation(address indexed impl, bool alive);\\n    event SetSelectorImplementation(bytes4 indexed selector, address indexed impl);\\n\\n\\n}\\n\",\"keccak256\":\"0x2a1e50808aa448c7a64fdea7ab2a7a2aa614e66ce974cc9e081bb70187716754\",\"license\":\"Unlicense\"},\"contracts/libraries/LibLockId.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/**\\n * @title LibLockId\\n */\\nlibrary LibLockId {\\n\\n    // LockId\\uc758 \\ud3ec\\uc778\\ud2b8 \\uc815\\ubcf4\\n    struct Point {\\n        int256 slope;\\n        int256 bias;\\n        uint256 timestamp; // \\ub4f1\\ub85d(\\uc2dc\\uc791)\\uc2dc\\uc810\\n    }\\n\\n    // LockId\\uc758 \\uc794\\uace0\\n    struct LockedInfo {\\n        uint256 start;\\n        uint256 end;\\n        uint256 amount;\\n        uint256 withdrawlTime;\\n    }\\n\\n    // SyncInfo\\n    struct SyncInfo {\\n        int256 slope;\\n        int256 bias;\\n        uint32 timestamp; // point \\uc815\\ubcf4\\uc5d0 \\uc788\\ub294 \\uc778\\ub371\\uc2a4\\uc5d0 \\ud574\\ub2f9\\ud558\\ub294 timestamp\\n        uint32 syncTime; // \\ub3d9\\uae30\\ud654 \\uc2dc\\uc810\\n    }\\n\\n    struct SyncPacket {\\n        uint256 lockId;\\n        SyncInfo packet;\\n    }\\n\\n    struct UnlimitedAmount {\\n        uint32 timestamp;\\n        uint256 amount;\\n    }\\n\\n}\",\"keccak256\":\"0xf1a7a0153b2bd0a20c1dd536adfa44e1c7c3dc7336a37eef2e3166c44285792e\",\"license\":\"MIT\"},\"contracts/proxy/Proxy2.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\nimport \\\"./ProxyStorage2.sol\\\";\\n\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nimport \\\"../interfaces/IProxyEvent.sol\\\";\\nimport \\\"../interfaces/IProxyAction.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Proxy2 is ProxyStorage2, IProxyEvent, IProxyAction\\n{\\n\\n    /* ========== DEPENDENCIES ========== */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    /* ========== CONSTRUCTOR ========== */\\n    constructor () {\\n        _owner = msg.sender;\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /* ========== onlyOwner ========== */\\n\\n    function renounceOwnership() external onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        require(newOwner != address(0), \\\"new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setProxyPause(bool _pause) external onlyOwner {\\n        pauseProxy = _pause;\\n    }\\n\\n    /// @notice Set implementation contract\\n    /// @param impl New implementation contract address\\n    function upgradeTo(address impl) external onlyOwner {\\n        require(impl != address(0), \\\"input is zero\\\");\\n        require(\\n            _implementation2(0) != impl,\\n            \\\"same addr\\\"\\n        );\\n        _setImplementation2(impl, 0, true);\\n        emit Upgraded(impl);\\n    }\\n\\n    /**\\n     * @notice Set the implementation and call a function in a single transaction. Useful to ensure\\n     *         atomic execution of initialization-based upgrades.\\n     *\\n     * @param _implementation Address of the implementation contract.\\n     * @param _data           Calldata to delegatecall the new implementation with.\\n     */\\n    function upgradeToAndCall(address _implementation, bytes calldata _data)\\n        public\\n        payable\\n        virtual\\n        onlyOwner\\n        returns (bytes memory)\\n    {\\n        // _setImplementation(_implementation);\\n        _setImplementation2(_implementation, 0, true);\\n\\n        (bool success, bytes memory returndata) = _implementation.delegatecall(_data);\\n        require(success, \\\"Proxy: delegatecall to new implementation contract failed\\\");\\n        return returndata;\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) external override onlyOwner {\\n        _setImplementation2(newImplementation, _index, _alive);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setAliveImplementation2(address newImplementation, bool _alive)\\n        public override onlyOwner\\n    {\\n        _setAliveImplementation2(newImplementation, _alive);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setSelectorImplementations2(\\n        bytes4[] calldata _selectors,\\n        address _imp\\n    ) public override onlyOwner {\\n        require(\\n            _selectors.length > 0,\\n            \\\"Proxy: _selectors's size is zero\\\"\\n        );\\n        require(aliveImplementation[_imp], \\\"Proxy: _imp is not alive\\\");\\n\\n        for (uint256 i = 0; i < _selectors.length; i++) {\\n            require(\\n                selectorImplementation[_selectors[i]] != _imp,\\n                \\\"LiquidityVaultProxy: same imp\\\"\\n            );\\n            selectorImplementation[_selectors[i]] = _imp;\\n            emit SetSelectorImplementation(_selectors[i], _imp);\\n        }\\n    }\\n\\n    /* ========== Anyone can   ========== */\\n\\n\\n\\n    /* ========== VIEW ========== */\\n\\n    /// @dev returns the implementation\\n    function implementation() external view returns (address) {\\n        return _implementation2(0);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function implementation2(uint256 _index) external override view returns (address) {\\n        return _implementation2(_index);\\n    }\\n\\n\\n    /// @inheritdoc IProxyAction\\n    function getSelectorImplementation2(bytes4 _selector)\\n        public override\\n        view\\n        returns (address impl)\\n    {\\n        if (selectorImplementation[_selector] == address(0))\\n            return proxyImplementation[0];\\n        else if (aliveImplementation[selectorImplementation[_selector]]){\\n            return selectorImplementation[_selector];\\n        }\\n        else return proxyImplementation[0];\\n    }\\n\\n\\n    /// @dev receive ether\\n    receive() external payable {\\n        revert(\\\"cannot receive Ether\\\");\\n    }\\n\\n    /// @dev fallback function , execute on undefined function call\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /* === ======= internal ========== */\\n\\n    /// @dev view implementation address of the proxy[index]\\n    /// @param _index index of proxy\\n    /// @return impl address of the implementation\\n    function _implementation2(uint256 _index)\\n        internal\\n        view\\n        returns (address impl)\\n    {\\n        return proxyImplementation[_index];\\n    }\\n\\n    /// @dev fallback function , execute on undefined function call\\n    function _fallback() internal {\\n        address _impl = getSelectorImplementation2(msg.sig);\\n\\n        require(\\n            _impl != address(0) && !pauseProxy,\\n            \\\"Proxy: impl OR proxy is false\\\"\\n        );\\n\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n                // delegatecall returns 0 on error.\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    /// @dev set the implementation address and status of the proxy[index]\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _index index of proxy\\n    /// @param _alive alive status\\n    function _setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) internal {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"Proxy: not contract address\\\"\\n        );\\n        if (_alive) proxyImplementation[_index] = newImplementation;\\n        _setAliveImplementation2(newImplementation, _alive);\\n    }\\n\\n    /// @dev set alive status of implementation\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _alive alive status\\n    function _setAliveImplementation2(address newImplementation, bool _alive)\\n        internal\\n    {\\n        aliveImplementation[newImplementation] = _alive;\\n        emit SetAliveImplementation(newImplementation, _alive);\\n    }\\n\\n}\",\"keccak256\":\"0x7d0a7c4411d5aba121d4afe73effde4df0c418aa2a3be22400058104ec1fab50\",\"license\":\"Unlicense\"},\"contracts/proxy/ProxyStorage2.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\ncontract ProxyStorage2  {\\n\\n    address public _owner;\\n    bool public pauseProxy;\\n\\n    mapping(uint256 => address) public proxyImplementation;\\n    mapping(address => bool) public aliveImplementation;\\n    mapping(bytes4 => address) public selectorImplementation;\\n\\n\\n}\",\"keccak256\":\"0x143792b4a69ee77d8ac3bf521938acc34f9e6800751d4db9bae90333b4749a4a\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600580546001600160a01b031916331790556117b8806100716000396000f3fe6080604052600436106101bb5760003560e01c80637aa7794a116100ec578063b911135f1161008a578063ccc3990911610064578063ccc3990914610605578063f0329f6b14610625578063f2fde38b14610645578063f9381ee4146106655761020d565b8063b911135f14610535578063bc897ae81461056b578063be60b2141461058b5761020d565b80638b8f4a65116100c65780638b8f4a651461049b5780638d4fdb40146104d1578063b2bdfa7b146104f1578063b8493556146105115761020d565b80637aa7794a1461043b5780637cb00d251461045b5780637cd5f6631461047b5761020d565b806350d2a276116101595780635cc797d8116101335780635cc797d8146103d057806363a8fd89146103f05780636c146d9b14610411578063715018a6146104265761020d565b806350d2a27614610314578063550d01a31461034a5780635c60da1b1461038a5761020d565b80633dfc795b116101955780633dfc795b14610294578063472d1f71146102b45780634a5df50f146102d45780634f1ef286146102f45761020d565b80630652b57a146102175780633659cfe6146102375780633ab76e9f146102575761020d565b3661020d5760405162461bcd60e51b815260206004820152601460248201527f63616e6e6f74207265636569766520457468657200000000000000000000000060448201526064015b60405180910390fd5b610215610685565b005b34801561022357600080fd5b50610215610232366004611513565b610735565b34801561024357600080fd5b50610215610252366004611513565b6107e5565b34801561026357600080fd5b50600654610277906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102a057600080fd5b506102156102af366004611513565b610936565b3480156102c057600080fd5b50600854610277906001600160a01b031681565b3480156102e057600080fd5b506102156102ef366004611535565b6109e6565b6103076103023660046115b9565b610c7e565b60405161028b919061163c565b34801561032057600080fd5b5061027761032f36600461168a565b6003602052600090815260409020546001600160a01b031681565b34801561035657600080fd5b5061037a610365366004611513565b60026020526000908152604090205460ff1681565b604051901515815260200161028b565b34801561039657600080fd5b506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610277565b3480156103dc57600080fd5b506102156103eb3660046116c4565b610db2565b3480156103fc57600080fd5b5060005461037a90600160a01b900460ff1681565b34801561041d57600080fd5b50610215610e06565b34801561043257600080fd5b50610215610e98565b34801561044757600080fd5b50600754610277906001600160a01b031681565b34801561046757600080fd5b506102156104763660046116f7565b610f28565b34801561048757600080fd5b50610215610496366004611712565b610f9d565b3480156104a757600080fd5b506102776104b6366004611745565b6000908152600160205260409020546001600160a01b031690565b3480156104dd57600080fd5b506102776104ec36600461168a565b610fee565b3480156104fd57600080fd5b50600054610277906001600160a01b031681565b34801561051d57600080fd5b5061052760045481565b60405190815260200161028b565b34801561054157600080fd5b50610277610550366004611745565b6001602052600090815260409020546001600160a01b031681565b34801561057757600080fd5b50610215610586366004611745565b6110ea565b34801561059757600080fd5b506105d96105a6366004611745565b60096020526000908152604090208054600182015460029092015490919063ffffffff8082169164010000000090041684565b60408051948552602085019390935263ffffffff9182169284019290925216606082015260800161028b565b34801561061157600080fd5b50610215610620366004611513565b611171565b34801561063157600080fd5b50600554610277906001600160a01b031681565b34801561065157600080fd5b50610215610660366004611513565b61126b565b34801561067157600080fd5b50610215610680366004611513565b611362565b600061069c6000356001600160e01b031916610fee565b90506001600160a01b038116158015906106c05750600054600160a01b900460ff16155b61070c5760405162461bcd60e51b815260206004820152601d60248201527f50726f78793a20696d706c204f522070726f78792069732066616c73650000006044820152606401610204565b3660008037600080366000845af43d6000803e80801561072b573d6000f35b3d6000fd5b505050565b6005546001600160a01b0316331461077d5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6006546001600160a01b038083169116036107c35760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461082b5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b6001600160a01b0381166108815760405162461bcd60e51b815260206004820152600d60248201527f696e707574206973207a65726f000000000000000000000000000000000000006044820152606401610204565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b038281169116036108f25760405162461bcd60e51b815260206004820152600960248201526839b0b6b29030b2323960b91b6044820152606401610204565b6108ff8160006001611412565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6005546001600160a01b0316331461097e5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6008546001600160a01b038083169116036109c45760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a2c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b81610a795760405162461bcd60e51b815260206004820181905260248201527f50726f78793a205f73656c6563746f727327732073697a65206973207a65726f6044820152606401610204565b6001600160a01b03811660009081526002602052604090205460ff16610ae15760405162461bcd60e51b815260206004820152601860248201527f50726f78793a205f696d70206973206e6f7420616c69766500000000000000006044820152606401610204565b60005b82811015610c7857816001600160a01b031660036000868685818110610b0c57610b0c61175e565b9050602002016020810190610b21919061168a565b6001600160e01b03191681526020810191909152604001600020546001600160a01b031603610b925760405162461bcd60e51b815260206004820152601d60248201527f4c69717569646974795661756c7450726f78793a2073616d6520696d700000006044820152606401610204565b8160036000868685818110610ba957610ba961175e565b9050602002016020810190610bbe919061168a565b6001600160e01b0319168152602081019190915260400160002080546001600160a01b0319166001600160a01b039283161790558216848483818110610c0657610c0661175e565b9050602002016020810190610c1b919061168a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f14ebc1c32aa68f4d766e89f3e546cee249f7df25183fc10ab1568d91c2ce9b7b60405160405180910390a380610c7081611774565b915050610ae4565b50505050565b6000546060906001600160a01b03163314610cc75760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b610cd48460006001611412565b600080856001600160a01b03168585604051610cf192919061179b565b600060405180830381855af49150503d8060008114610d2c576040519150601f19603f3d011682016040523d82523d6000602084013e610d31565b606091505b509150915081610da95760405162461bcd60e51b815260206004820152603960248201527f50726f78793a2064656c656761746563616c6c20746f206e657720696d706c6560448201527f6d656e746174696f6e20636f6e7472616374206661696c6564000000000000006064820152608401610204565b95945050505050565b6000546001600160a01b03163314610df85760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b610e02828261149d565b5050565b6005546001600160a01b03163314610e4e5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6005546040516000916001600160a01b0316907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf5683908390a3600580546001600160a01b0319169055565b6000546001600160a01b03163314610ede5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610f6e5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b60008054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b6000546001600160a01b03163314610fe35760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b610730838383611412565b6001600160e01b031981166000908152600360205260408120546001600160a01b031661104e5750506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b6001600160e01b031982166000908152600360209081526040808320546001600160a01b03168352600290915290205460ff16156110ac57506001600160e01b0319166000908152600360205260409020546001600160a01b031690565b50506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b919050565b6005546001600160a01b031633146111325760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b806004540361116c5760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600455565b6005546001600160a01b031633146111b95760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6001600160a01b03811661120f5760405162461bcd60e51b815260206004820152601f60248201527f6e6577206d616e6167657220697320746865207a65726f2061646472657373006044820152606401610204565b6005546040516001600160a01b038084169216907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf568390600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146112b15760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b6001600160a01b0381166113075760405162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610204565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146113aa5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6007546001600160a01b038083169116036113f05760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383163b6114695760405162461bcd60e51b815260206004820152601b60248201527f50726f78793a206e6f7420636f6e7472616374206164647265737300000000006044820152606401610204565b801561149757600082815260016020526040902080546001600160a01b0319166001600160a01b0385161790555b61073083825b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527f72558d9bfba4210f9ef095c782589484151f6d90f7a81bb3cb9b33efc695d324910160405180910390a25050565b80356001600160a01b03811681146110e557600080fd5b60006020828403121561152557600080fd5b61152e826114fc565b9392505050565b60008060006040848603121561154a57600080fd5b833567ffffffffffffffff8082111561156257600080fd5b818601915086601f83011261157657600080fd5b81358181111561158557600080fd5b8760208260051b850101111561159a57600080fd5b6020928301955093506115b091860190506114fc565b90509250925092565b6000806000604084860312156115ce57600080fd5b6115d7846114fc565b9250602084013567ffffffffffffffff808211156115f457600080fd5b818601915086601f83011261160857600080fd5b81358181111561161757600080fd5b87602082850101111561162957600080fd5b6020830194508093505050509250925092565b600060208083528351808285015260005b818110156116695785810183015185820160400152820161164d565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561169c57600080fd5b81356001600160e01b03198116811461152e57600080fd5b803580151581146110e557600080fd5b600080604083850312156116d757600080fd5b6116e0836114fc565b91506116ee602084016116b4565b90509250929050565b60006020828403121561170957600080fd5b61152e826116b4565b60008060006060848603121561172757600080fd5b611730846114fc565b9250602084013591506115b0604085016116b4565b60006020828403121561175757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161179457634e487b7160e01b600052601160045260246000fd5b5060010190565b818382376000910190815291905056fea164736f6c6343000812000a",
  "deployedBytecode": "0x6080604052600436106101bb5760003560e01c80637aa7794a116100ec578063b911135f1161008a578063ccc3990911610064578063ccc3990914610605578063f0329f6b14610625578063f2fde38b14610645578063f9381ee4146106655761020d565b8063b911135f14610535578063bc897ae81461056b578063be60b2141461058b5761020d565b80638b8f4a65116100c65780638b8f4a651461049b5780638d4fdb40146104d1578063b2bdfa7b146104f1578063b8493556146105115761020d565b80637aa7794a1461043b5780637cb00d251461045b5780637cd5f6631461047b5761020d565b806350d2a276116101595780635cc797d8116101335780635cc797d8146103d057806363a8fd89146103f05780636c146d9b14610411578063715018a6146104265761020d565b806350d2a27614610314578063550d01a31461034a5780635c60da1b1461038a5761020d565b80633dfc795b116101955780633dfc795b14610294578063472d1f71146102b45780634a5df50f146102d45780634f1ef286146102f45761020d565b80630652b57a146102175780633659cfe6146102375780633ab76e9f146102575761020d565b3661020d5760405162461bcd60e51b815260206004820152601460248201527f63616e6e6f74207265636569766520457468657200000000000000000000000060448201526064015b60405180910390fd5b610215610685565b005b34801561022357600080fd5b50610215610232366004611513565b610735565b34801561024357600080fd5b50610215610252366004611513565b6107e5565b34801561026357600080fd5b50600654610277906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102a057600080fd5b506102156102af366004611513565b610936565b3480156102c057600080fd5b50600854610277906001600160a01b031681565b3480156102e057600080fd5b506102156102ef366004611535565b6109e6565b6103076103023660046115b9565b610c7e565b60405161028b919061163c565b34801561032057600080fd5b5061027761032f36600461168a565b6003602052600090815260409020546001600160a01b031681565b34801561035657600080fd5b5061037a610365366004611513565b60026020526000908152604090205460ff1681565b604051901515815260200161028b565b34801561039657600080fd5b506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610277565b3480156103dc57600080fd5b506102156103eb3660046116c4565b610db2565b3480156103fc57600080fd5b5060005461037a90600160a01b900460ff1681565b34801561041d57600080fd5b50610215610e06565b34801561043257600080fd5b50610215610e98565b34801561044757600080fd5b50600754610277906001600160a01b031681565b34801561046757600080fd5b506102156104763660046116f7565b610f28565b34801561048757600080fd5b50610215610496366004611712565b610f9d565b3480156104a757600080fd5b506102776104b6366004611745565b6000908152600160205260409020546001600160a01b031690565b3480156104dd57600080fd5b506102776104ec36600461168a565b610fee565b3480156104fd57600080fd5b50600054610277906001600160a01b031681565b34801561051d57600080fd5b5061052760045481565b60405190815260200161028b565b34801561054157600080fd5b50610277610550366004611745565b6001602052600090815260409020546001600160a01b031681565b34801561057757600080fd5b50610215610586366004611745565b6110ea565b34801561059757600080fd5b506105d96105a6366004611745565b60096020526000908152604090208054600182015460029092015490919063ffffffff8082169164010000000090041684565b60408051948552602085019390935263ffffffff9182169284019290925216606082015260800161028b565b34801561061157600080fd5b50610215610620366004611513565b611171565b34801561063157600080fd5b50600554610277906001600160a01b031681565b34801561065157600080fd5b50610215610660366004611513565b61126b565b34801561067157600080fd5b50610215610680366004611513565b611362565b600061069c6000356001600160e01b031916610fee565b90506001600160a01b038116158015906106c05750600054600160a01b900460ff16155b61070c5760405162461bcd60e51b815260206004820152601d60248201527f50726f78793a20696d706c204f522070726f78792069732066616c73650000006044820152606401610204565b3660008037600080366000845af43d6000803e80801561072b573d6000f35b3d6000fd5b505050565b6005546001600160a01b0316331461077d5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6006546001600160a01b038083169116036107c35760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461082b5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b6001600160a01b0381166108815760405162461bcd60e51b815260206004820152600d60248201527f696e707574206973207a65726f000000000000000000000000000000000000006044820152606401610204565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b038281169116036108f25760405162461bcd60e51b815260206004820152600960248201526839b0b6b29030b2323960b91b6044820152606401610204565b6108ff8160006001611412565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6005546001600160a01b0316331461097e5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6008546001600160a01b038083169116036109c45760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a2c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b81610a795760405162461bcd60e51b815260206004820181905260248201527f50726f78793a205f73656c6563746f727327732073697a65206973207a65726f6044820152606401610204565b6001600160a01b03811660009081526002602052604090205460ff16610ae15760405162461bcd60e51b815260206004820152601860248201527f50726f78793a205f696d70206973206e6f7420616c69766500000000000000006044820152606401610204565b60005b82811015610c7857816001600160a01b031660036000868685818110610b0c57610b0c61175e565b9050602002016020810190610b21919061168a565b6001600160e01b03191681526020810191909152604001600020546001600160a01b031603610b925760405162461bcd60e51b815260206004820152601d60248201527f4c69717569646974795661756c7450726f78793a2073616d6520696d700000006044820152606401610204565b8160036000868685818110610ba957610ba961175e565b9050602002016020810190610bbe919061168a565b6001600160e01b0319168152602081019190915260400160002080546001600160a01b0319166001600160a01b039283161790558216848483818110610c0657610c0661175e565b9050602002016020810190610c1b919061168a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f14ebc1c32aa68f4d766e89f3e546cee249f7df25183fc10ab1568d91c2ce9b7b60405160405180910390a380610c7081611774565b915050610ae4565b50505050565b6000546060906001600160a01b03163314610cc75760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b610cd48460006001611412565b600080856001600160a01b03168585604051610cf192919061179b565b600060405180830381855af49150503d8060008114610d2c576040519150601f19603f3d011682016040523d82523d6000602084013e610d31565b606091505b509150915081610da95760405162461bcd60e51b815260206004820152603960248201527f50726f78793a2064656c656761746563616c6c20746f206e657720696d706c6560448201527f6d656e746174696f6e20636f6e7472616374206661696c6564000000000000006064820152608401610204565b95945050505050565b6000546001600160a01b03163314610df85760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b610e02828261149d565b5050565b6005546001600160a01b03163314610e4e5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6005546040516000916001600160a01b0316907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf5683908390a3600580546001600160a01b0319169055565b6000546001600160a01b03163314610ede5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610f6e5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b60008054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b6000546001600160a01b03163314610fe35760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b610730838383611412565b6001600160e01b031981166000908152600360205260408120546001600160a01b031661104e5750506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b6001600160e01b031982166000908152600360209081526040808320546001600160a01b03168352600290915290205460ff16156110ac57506001600160e01b0319166000908152600360205260409020546001600160a01b031690565b50506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b919050565b6005546001600160a01b031633146111325760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b806004540361116c5760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600455565b6005546001600160a01b031633146111b95760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6001600160a01b03811661120f5760405162461bcd60e51b815260206004820152601f60248201527f6e6577206d616e6167657220697320746865207a65726f2061646472657373006044820152606401610204565b6005546040516001600160a01b038084169216907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf568390600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146112b15760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610204565b6001600160a01b0381166113075760405162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610204565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146113aa5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610204565b6007546001600160a01b038083169116036113f05760405162461bcd60e51b81526004016102049060208082526004908201526373616d6560e01b604082015260600190565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383163b6114695760405162461bcd60e51b815260206004820152601b60248201527f50726f78793a206e6f7420636f6e7472616374206164647265737300000000006044820152606401610204565b801561149757600082815260016020526040902080546001600160a01b0319166001600160a01b0385161790555b61073083825b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527f72558d9bfba4210f9ef095c782589484151f6d90f7a81bb3cb9b33efc695d324910160405180910390a25050565b80356001600160a01b03811681146110e557600080fd5b60006020828403121561152557600080fd5b61152e826114fc565b9392505050565b60008060006040848603121561154a57600080fd5b833567ffffffffffffffff8082111561156257600080fd5b818601915086601f83011261157657600080fd5b81358181111561158557600080fd5b8760208260051b850101111561159a57600080fd5b6020928301955093506115b091860190506114fc565b90509250925092565b6000806000604084860312156115ce57600080fd5b6115d7846114fc565b9250602084013567ffffffffffffffff808211156115f457600080fd5b818601915086601f83011261160857600080fd5b81358181111561161757600080fd5b87602082850101111561162957600080fd5b6020830194508093505050509250925092565b600060208083528351808285015260005b818110156116695785810183015185820160400152820161164d565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561169c57600080fd5b81356001600160e01b03198116811461152e57600080fd5b803580151581146110e557600080fd5b600080604083850312156116d757600080fd5b6116e0836114fc565b91506116ee602084016116b4565b90509250929050565b60006020828403121561170957600080fd5b61152e826116b4565b60008060006060848603121561172757600080fd5b611730846114fc565b9250602084013591506115b0604085016116b4565b60006020828403121561175757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161179457634e487b7160e01b600052601160045260246000fd5b5060010190565b818382376000910190815291905056fea164736f6c6343000812000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getSelectorImplementation2(bytes4)": {
        "details": "view implementation address of selector of function",
        "params": {
          "_selector": "selector of function"
        },
        "returns": {
          "impl": "address of the implementation"
        }
      },
      "implementation()": {
        "details": "returns the implementation"
      },
      "implementation2(uint256)": {
        "details": "view implementation address of the proxy[index]",
        "params": {
          "_index": "index of proxy"
        },
        "returns": {
          "_0": "address of the implementation"
        }
      },
      "setAliveImplementation2(address,bool)": {
        "details": "set alive status of implementation",
        "params": {
          "_alive": "alive status",
          "newImplementation": "Address of the new implementation."
        }
      },
      "setImplementation2(address,uint256,bool)": {
        "details": "set the implementation address and status of the proxy[index]",
        "params": {
          "_alive": "_alive",
          "_index": "index",
          "newImplementation": "Address of the new implementation."
        }
      },
      "setProxyPause(bool)": {
        "params": {
          "_pause": "true:pause or false:resume"
        }
      },
      "setSelectorImplementations2(bytes4[],address)": {
        "details": "set selectors of Implementation",
        "params": {
          "_imp": "implementation address",
          "_selectors": "being added selectors"
        }
      },
      "upgradeTo(address)": {
        "params": {
          "impl": "New implementation contract address"
        }
      },
      "upgradeToAndCall(address,bytes)": {
        "params": {
          "_data": "Calldata to delegatecall the new implementation with.",
          "_implementation": "Address of the implementation contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setProxyPause(bool)": {
        "notice": "Set pause state"
      },
      "upgradeTo(address)": {
        "notice": "Set implementation contract"
      },
      "upgradeToAndCall(address,bytes)": {
        "notice": "Set the implementation and call a function in a single transaction. Useful to ensure         atomic execution of initialization-based upgrades."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32401,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 32403,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "pauseProxy",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 32407,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "proxyImplementation",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 32411,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "aliveImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 32415,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "selectorImplementation",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes4,t_address)"
      },
      {
        "astId": 7960,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "maxLockCountPerRegister",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 7962,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "_manager",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 7964,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "addressManager",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 7966,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "lockTos",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 7968,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "l2Register",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 7970,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "minGasLimitRegister",
        "offset": 20,
        "slot": "8",
        "type": "t_uint32"
      },
      {
        "astId": 7975,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "syncInfoOfLockId",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_struct(SyncInfo)28615_storage)"
      },
      {
        "astId": 7977,
        "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
        "label": "_lock",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes4,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(SyncInfo)28615_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct LibLockId.SyncInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(SyncInfo)28615_storage"
      },
      "t_struct(SyncInfo)28615_storage": {
        "encoding": "inplace",
        "label": "struct LibLockId.SyncInfo",
        "members": [
          {
            "astId": 28608,
            "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
            "label": "slope",
            "offset": 0,
            "slot": "0",
            "type": "t_int256"
          },
          {
            "astId": 28610,
            "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
            "label": "bias",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 28612,
            "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint32"
          },
          {
            "astId": 28614,
            "contract": "contracts/L1/L1StosToL2Proxy.sol:L1StosToL2Proxy",
            "label": "syncTime",
            "offset": 4,
            "slot": "2",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}