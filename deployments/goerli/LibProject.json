{
  "address": "0xfBb5AE0Ea00AaA5953f2c82D76A463eC0F8111A7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressManager",
          "type": "address"
        }
      ],
      "name": "getL1Bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressManager",
          "type": "address"
        }
      ],
      "name": "getL1CommunicationMessenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "vaultName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalAllocatedAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibProject.InitalParameterNonScheduleVault[]",
          "name": "customs",
          "type": "tuple[]"
        }
      ],
      "name": "validateNonScheduleVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "boolValidate",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "vaultName",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstClaimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "firstClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "roundIntervalTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct LibProject.InitalParameterScheduleVault",
              "name": "params",
              "type": "tuple"
            }
          ],
          "internalType": "struct LibProject.InitalParameterSchedule[]",
          "name": "customs",
          "type": "tuple[]"
        }
      ],
      "name": "validateScheduleVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "boolValidate",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "stosTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stosTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stosTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stosTier4",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier1Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier2Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier3Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier4Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "total1roundSaleAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "total2roundSaleAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "saleTokenPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "payTokenPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hardcapAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "changeTOSPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startWhiteTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endWhiteTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "start1roundTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "end1roundTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "snapshotTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "start2roundTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "end2roundTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterPublicSaleVault",
                  "name": "vaultParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "claimCounts",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "secondClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "roundInterval",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterPublicSaleClaim",
                  "name": "claimParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "receiveAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "secondClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "roundIntervalTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterVestingFundVault",
                  "name": "vestingParams",
                  "type": "tuple"
                }
              ],
              "internalType": "struct LibProject.InitalParameterPublicSale",
              "name": "publicSaleParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tosPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initSqrtPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "internalType": "struct LibProject.InitalParameterInitialLiquidityVault",
              "name": "initialVaultParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    }
                  ],
                  "internalType": "struct LibPool.PoolInfo",
                  "name": "poolParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAllocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "firstClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "roundIntervalTime",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterScheduleVault",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "internalType": "struct LibProject.InitalParameterLiquidityRewardVault",
              "name": "rewardTonTosPoolParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    }
                  ],
                  "internalType": "struct LibPool.PoolInfo",
                  "name": "poolParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAllocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "firstClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "roundIntervalTime",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterScheduleVault",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "internalType": "struct LibProject.InitalParameterLiquidityRewardVault",
              "name": "rewardProjectTosPoolParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstClaimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "firstClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "roundIntervalTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct LibProject.InitalParameterScheduleVault",
              "name": "tosAirdropParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstClaimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "firstClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "roundIntervalTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct LibProject.InitalParameterScheduleVault",
              "name": "tonAirdropParams",
              "type": "tuple"
            }
          ],
          "internalType": "struct LibProject.TokamakVaults",
          "name": "tokamakVaults",
          "type": "tuple"
        }
      ],
      "name": "validateTokamakVaults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "boolValidate",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x3b7c9f901fdc2de5d6e9c61a300024d8c8c2925354d3f614f715239e2df681b2",
  "receipt": {
    "to": null,
    "from": "0xc1eba383D94c6021160042491A5dfaF1d82694E6",
    "contractAddress": "0xfBb5AE0Ea00AaA5953f2c82D76A463eC0F8111A7",
    "transactionIndex": 2,
    "gasUsed": "801399",
    "logsBloom": "0x
    "blockHash": "0xeaeaf1ed2dbf6cb9012d8bc3f4e738a3d5e85104d19ddf2cd2f2cadf20fbb3f8",
    "transactionHash": "0x3b7c9f901fdc2de5d6e9c61a300024d8c8c2925354d3f614f715239e2df681b2",
    "logs": [],
    "blockNumber": 10252372,
    "cumulativeGasUsed": "1595894",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "3b50c6414004135bcf0872b7d0602abb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressManager\",\"type\":\"address\"}],\"name\":\"getL1Bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressManager\",\"type\":\"address\"}],\"name\":\"getL1CommunicationMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibProject.InitalParameterNonScheduleVault[]\",\"name\":\"customs\",\"type\":\"tuple[]\"}],\"name\":\"validateNonScheduleVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"boolValidate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"params\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterSchedule[]\",\"name\":\"customs\",\"type\":\"tuple[]\"}],\"name\":\"validateScheduleVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"boolValidate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stosTier1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stosTier2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stosTier3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stosTier4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier1Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier2Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier3Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier4Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total1roundSaleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total2roundSaleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardcapAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"changeTOSPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startWhiteTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endWhiteTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start1roundTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end1roundTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshotTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start2roundTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end2roundTime\",\"type\":\"uint256\"}],\"internalType\":\"struct LibProject.InitalParameterPublicSaleVault\",\"name\":\"vaultParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimCounts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundInterval\",\"type\":\"uint256\"}],\"internalType\":\"struct LibProject.InitalParameterPublicSaleClaim\",\"name\":\"claimParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundIntervalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct LibProject.InitalParameterVestingFundVault\",\"name\":\"vestingParams\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterPublicSale\",\"name\":\"publicSaleParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tosPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initSqrtPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"internalType\":\"struct LibProject.InitalParameterInitialLiquidityVault\",\"name\":\"initialVaultParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct LibPool.PoolInfo\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"params\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterLiquidityRewardVault\",\"name\":\"rewardTonTosPoolParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct LibPool.PoolInfo\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"params\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterLiquidityRewardVault\",\"name\":\"rewardProjectTosPoolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"tosAirdropParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"tonAirdropParams\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.TokamakVaults\",\"name\":\"tokamakVaults\",\"type\":\"tuple\"}],\"name\":\"validateTokamakVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"boolValidate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"LibProject\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibProject.sol\":\"LibProject\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":625},\"remappings\":[]},\"sources\":{\"contracts/libraries/LibPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n\\n/**\\n * @title LibProject\\n */\\nlibrary LibPool {\\n\\n    struct PoolInfo {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n}\",\"keccak256\":\"0x4f96e027ec71a0666159676b2426fbb90bd9de37076c03e225e533df8ff30ab5\",\"license\":\"MIT\"},\"contracts/libraries/LibProject.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./LibPool.sol\\\";\\n\\ninterface AddressManagerI {\\n    function getAddress(string memory _name) external view returns (address);\\n}\\n\\n/**\\n * @title LibProject\\n */\\nlibrary LibProject {\\n\\n    enum TOKEN_TYPE {\\n        ERC20_A,\\n        ERC20_B,\\n        ERC20_C,\\n        ERC20_D,\\n        NONE\\n    }\\n\\n    enum L2_TYPE {\\n        TOKAMAL_OPTIMISM,\\n        TOKAMAL_ZKEVM,\\n        NONE\\n    }\\n\\n    struct ProjectInfo {\\n        address projectOwner;\\n        address tokenOwner;\\n        address l1Token;\\n        address l2Token;\\n        address addressManager;\\n        uint256 initialTotalSupply;\\n        uint8 tokenType;\\n        uint8 l2Type;\\n        string projectName;\\n    }\\n\\n    struct L2Info {\\n        address l2TokenFactory;\\n        address l2ProjectManager;\\n        uint32 depositMinGasLimit;\\n        uint32 sendMsgMinGasLimit;\\n    }\\n\\n    struct L2ProjectInfo {\\n        uint256 projectId;\\n        address projectOwner;\\n        address l1Token;\\n        address l2Token;\\n        string projectName;\\n    }\\n\\n    struct TokamakVaults {\\n        InitalParameterPublicSale publicSaleParams;\\n        InitalParameterInitialLiquidityVault initialVaultParams;\\n        InitalParameterLiquidityRewardVault rewardTonTosPoolParams;\\n        InitalParameterLiquidityRewardVault rewardProjectTosPoolParams;\\n        InitalParameterScheduleVault tosAirdropParams;\\n        InitalParameterScheduleVault tonAirdropParams;\\n    }\\n\\n    struct InitalParameterPublicSale {\\n        InitalParameterPublicSaleVault vaultParams;\\n        InitalParameterPublicSaleClaim claimParams;\\n        InitalParameterVestingFundVault vestingParams;\\n    }\\n\\n    struct InitalParameterPublicSaleVault {\\n        uint256 stosTier1;\\n        uint256 stosTier2;\\n        uint256 stosTier3;\\n        uint256 stosTier4;\\n        uint256 tier1Percents;\\n        uint256 tier2Percents;\\n        uint256 tier3Percents;\\n        uint256 tier4Percents;\\n        uint256 total1roundSaleAmount;\\n        uint256 total2roundSaleAmount;\\n        uint256 saleTokenPrice;\\n        uint256 payTokenPrice;\\n        uint256 hardcapAmount;\\n        uint256 changeTOSPercent;\\n        uint256 startWhiteTime;\\n        uint256 endWhiteTime;\\n        uint256 start1roundTime;\\n        uint256 end1roundTime;\\n        uint256 snapshotTime;\\n        uint256 start2roundTime;\\n        uint256 end2roundTime;\\n    }\\n\\n    struct InitalParameterPublicSaleClaim {\\n        uint256 claimCounts;\\n        uint256 firstClaimPercent;\\n        uint256 firstClaimTime;\\n        uint256 secondClaimTime;\\n        uint256 roundInterval;\\n    }\\n\\n    struct InitalParameterVestingFundVault {\\n        address receiveAddress;\\n        uint256 totalClaimCount;\\n        uint256 firstClaimPercent;\\n        uint256 firstClaimTime;\\n        uint256 secondClaimTime;\\n        uint256 roundIntervalTime;\\n        uint24 fee;\\n    }\\n\\n    struct InitalParameterInitialLiquidityVault {\\n        uint256 totalAllocatedAmount;\\n        uint256 tosPrice;\\n        uint256 tokenPrice;\\n        uint256 initSqrtPrice;\\n        uint32 startTime;\\n        uint16 fee;\\n    }\\n\\n    struct InitalParameterLiquidityRewardVault {\\n        LibPool.PoolInfo poolParams;\\n        InitalParameterScheduleVault params;\\n    }\\n\\n    struct InitalParameterSchedule {\\n        string vaultName;\\n        InitalParameterScheduleVault params;\\n    }\\n\\n    struct InitalParameterScheduleVault {\\n        address claimer;\\n        uint256 totalAllocatedAmount;\\n        uint256 totalClaimCount;\\n        uint256 firstClaimAmount;\\n        uint32 firstClaimTime;\\n        uint32 secondClaimTime;\\n        uint32 roundIntervalTime;\\n    }\\n\\n    struct InitalParameterNonScheduleVault {\\n        string vaultName;\\n        address claimer;\\n        uint256 totalAllocatedAmount;\\n    }\\n\\n    function getL1CommunicationMessenger(address addressManager) external view returns(address _address) {\\n        if (addressManager == address(0)) return address(0);\\n        try\\n            AddressManagerI(addressManager).getAddress('Proxy__OVM_L1CrossDomainMessenger') returns (address a) {\\n                _address = a;\\n        } catch (bytes memory ) {\\n            _address = address(0);\\n        }\\n    }\\n\\n    function getL1Bridge(address addressManager) external view returns(address _address) {\\n        if (addressManager == address(0)) return address(0);\\n        try\\n            AddressManagerI(addressManager).getAddress('Proxy__OVM_L1StandardBridge') returns (address a) {\\n                _address = a;\\n        } catch (bytes memory ) {\\n            _address = address(0);\\n        }\\n    }\\n\\n    function validateTokamakVaults(TokamakVaults memory tokamakVaults)\\n    public pure returns (bool boolValidate, uint256 totalAmount) {\\n\\n        // if ((tokamakVaults.publicSaleParams.vaultParams.total1roundSaleAmount\\n        //     +tokamakVaults.publicSaleParams.vaultParams.total2roundSaleAmount) == 0 ||\\n        //     tokamakVaults.initialVaultParams.totalAllocatedAmount == 0 ||\\n        //     tokamakVaults.rewardParams.params.totalAllocatedAmount == 0 ||\\n        //     tokamakVaults.tosAirdropParams.totalAllocatedAmount == 0 ||\\n        //     tokamakVaults.tonAirdropParams.totalAllocatedAmount == 0\\n        // ) return (boolValidate, totalAmount);\\n\\n        // if (tokamakVaults.initialVaultParams.tosPrice == 0 ||\\n        //     tokamakVaults.initialVaultParams.tokenPrice == 0 ||\\n        //     tokamakVaults.initialVaultParams.initSqrtPrice == 0 ||\\n        //     tokamakVaults.initialVaultParams.startTime == 0 ||\\n        //     tokamakVaults.initialVaultParams.fee == 0) return (boolValidate, totalAmount);\\n\\n        // if (tokamakVaults.rewardParams.poolAddress == address(0) ||\\n        //     tokamakVaults.rewardParams.params.totalClaimCount == 0 ||\\n        //     tokamakVaults.rewardParams.params.firstClaimAmount == 0 ||\\n        //     tokamakVaults.rewardParams.params.firstClaimTime == 0 ||\\n        //     tokamakVaults.rewardParams.params.secondClaimTime == 0 ||\\n        //     tokamakVaults.rewardParams.params.roundIntervalTime == 0\\n        //     ) return (boolValidate, totalAmount);\\n\\n        // if (tokamakVaults.tosAirdropParams.totalClaimCount == 0 ||\\n        //     tokamakVaults.tosAirdropParams.firstClaimAmount == 0 ||\\n        //     tokamakVaults.tosAirdropParams.firstClaimTime == 0 ||\\n        //     tokamakVaults.tosAirdropParams.secondClaimTime == 0 ||\\n        //     tokamakVaults.tosAirdropParams.roundIntervalTime == 0\\n        //     ) return (boolValidate, totalAmount);\\n\\n        // if (tokamakVaults.tonAirdropParams.totalClaimCount == 0 ||\\n        //     tokamakVaults.tonAirdropParams.firstClaimAmount == 0 ||\\n        //     tokamakVaults.tonAirdropParams.firstClaimTime == 0 ||\\n        //     tokamakVaults.tonAirdropParams.secondClaimTime == 0 ||\\n        //     tokamakVaults.tonAirdropParams.roundIntervalTime == 0\\n        //     ) return (boolValidate, totalAmount);\\n\\n        totalAmount = tokamakVaults.publicSaleParams.vaultParams.total1roundSaleAmount +\\n                    tokamakVaults.publicSaleParams.vaultParams.total2roundSaleAmount +\\n                    tokamakVaults.initialVaultParams.totalAllocatedAmount +\\n                    tokamakVaults.rewardTonTosPoolParams.params.totalAllocatedAmount +\\n                    tokamakVaults.rewardProjectTosPoolParams.params.totalAllocatedAmount +\\n                    tokamakVaults.tosAirdropParams.totalAllocatedAmount +\\n                    tokamakVaults.tonAirdropParams.totalAllocatedAmount ;\\n\\n        if (totalAmount == 0) return (boolValidate, totalAmount);\\n\\n        boolValidate = true;\\n    }\\n\\n    function validateScheduleVault(\\n        InitalParameterSchedule[] memory customs\\n    ) public pure returns (bool boolValidate, uint256 totalAmount) {\\n\\n        if (customs.length != 0) {\\n            for(uint256 i = 0; i < customs.length; i++){\\n                if (customs[i].params.totalAllocatedAmount == 0 ||\\n                    customs[i].params.totalClaimCount == 0 ||\\n                    customs[i].params.firstClaimAmount == 0 ||\\n                    customs[i].params.firstClaimTime == 0 ||\\n                    customs[i].params.secondClaimTime == 0 ||\\n                    customs[i].params.roundIntervalTime == 0\\n                    ) return (boolValidate, totalAmount);\\n\\n                totalAmount += customs[i].params.totalAllocatedAmount;\\n            }\\n            boolValidate = true;\\n        }\\n    }\\n\\n    function validateNonScheduleVault(\\n        InitalParameterNonScheduleVault[] memory customs\\n    ) public pure returns (bool boolValidate, uint256 totalAmount) {\\n\\n        if (customs.length != 0) {\\n            for(uint256 i =0 ; i < customs.length; i++){\\n                if (customs[i].totalAllocatedAmount == 0) return (boolValidate, totalAmount);\\n                totalAmount += customs[i].totalAllocatedAmount;\\n            }\\n            boolValidate = true;\\n        }\\n    }\\n\\n}\",\"keccak256\":\"0x9ec4446b2f020601ad9537a5f6d16a0828b89951d49b5059627a2aa0408ca74a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610d8861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c80639da317611161005a5780639da31761146100d0578063a95614d6146100e3578063f6266b74146100f657600080fd5b806308d8b1ac14610076578063507c8bd1146100a5575b600080fd5b61008961008436600461075a565b610109565b6040805192151583526020830191909152015b60405180910390f35b6100b86100b3366004610856565b61028b565b6040516001600160a01b03909116815260200161009c565b6100b86100de366004610856565b610381565b6100896100f136600461087a565b6103f3565b610089610104366004610b49565b610473565b60008082516000146102865760005b83518110156102805783818151811061013357610133610d00565b6020026020010151602001516020015160001480610172575083818151811061015e5761015e610d00565b602002602001015160200151604001516000145b8061019e575083818151811061018a5761018a610d00565b602002602001015160200151606001516000145b806101d057508381815181106101b6576101b6610d00565b6020026020010151602001516080015163ffffffff166000145b8061020257508381815181106101e8576101e8610d00565b60200260200101516020015160a0015163ffffffff166000145b80610234575083818151811061021a5761021a610d00565b60200260200101516020015160c0015163ffffffff166000145b1561023f5750915091565b83818151811061025157610251610d00565b602002602001015160200151602001518261026c9190610d2c565b91508061027881610d45565b915050610118565b50600191505b915091565b60006001600160a01b0382166102a357506000919050565b60405163bf40fac160e01b815260206004820152602160248201527f50726f78795f5f4f564d5f4c3143726f7373446f6d61696e4d657373656e67656044820152603960f91b60648201526001600160a01b0383169063bf40fac1906084015b602060405180830381865afa92505050801561033c575060408051601f3d908101601f1916820190925261033991810190610d5e565b60015b610379573d80801561036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b5060009392505050565b90505b919050565b60006001600160a01b03821661039957506000919050565b60405163bf40fac160e01b815260206004820152601b60248201527f50726f78795f5f4f564d5f4c315374616e64617264427269646765000000000060448201526001600160a01b0383169063bf40fac190606401610303565b60008082516000146102865760005b83518110156102805783818151811061041d5761041d610d00565b6020026020010151604001516000036104365750915091565b83818151811061044857610448610d00565b6020026020010151604001518261045f9190610d2c565b91508061046b81610d45565b915050610402565b6000808260a00151602001518360800151602001518460600151602001516020015185604001516020015160200151866020015160000151876000015160000151610120015188600001516000015161010001516104d19190610d2c565b6104db9190610d2c565b6104e59190610d2c565b6104ef9190610d2c565b6104f99190610d2c565b6105039190610d2c565b90508060000361051257915091565b60019150915091565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156105545761055461051b565b60405290565b6040805190810167ffffffffffffffff811182821017156105545761055461051b565b6040516060810167ffffffffffffffff811182821017156105545761055461051b565b60405160c0810167ffffffffffffffff811182821017156105545761055461051b565b6040516102a0810167ffffffffffffffff811182821017156105545761055461051b565b604051601f8201601f1916810167ffffffffffffffff811182821017156106105761061061051b565b604052919050565b600067ffffffffffffffff8211156106325761063261051b565b5060051b60200190565b600082601f83011261064d57600080fd5b813567ffffffffffffffff8111156106675761066761051b565b61067a601f8201601f19166020016105e7565b81815284602083860101111561068f57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146106c157600080fd5b50565b803563ffffffff8116811461037c57600080fd5b600060e082840312156106ea57600080fd5b6106f2610531565b905081356106ff816106ac565b8082525060208201356020820152604082013560408201526060820135606082015261072d608083016106c4565b608082015261073e60a083016106c4565b60a082015261074f60c083016106c4565b60c082015292915050565b6000602080838503121561076d57600080fd5b823567ffffffffffffffff8082111561078557600080fd5b818501915085601f83011261079957600080fd5b81356107ac6107a782610618565b6105e7565b81815260059190911b830184019084810190888311156107cb57600080fd5b8585015b83811015610849578035858111156107e75760008081fd5b8601610100818c03601f190112156107ff5760008081fd5b61080761055a565b88820135878111156108195760008081fd5b6108278d8b8386010161063c565b8252506108378c604084016106d8565b818a01528452509186019186016107cf565b5098975050505050505050565b60006020828403121561086857600080fd5b8135610873816106ac565b9392505050565b6000602080838503121561088d57600080fd5b823567ffffffffffffffff808211156108a557600080fd5b818501915085601f8301126108b957600080fd5b81356108c76107a782610618565b81815260059190911b830184019084810190888311156108e657600080fd5b8585015b83811015610849578035858111156109025760008081fd5b86016060818c03601f190181131561091a5760008081fd5b61092261057d565b89830135888111156109345760008081fd5b6109428e8c8387010161063c565b825250604080840135610954816106ac565b8b83015291909201359082015283529186019186016108ea565b600060a0828403121561098057600080fd5b60405160a0810181811067ffffffffffffffff821117156109a3576109a361051b565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b803562ffffff8116811461037c57600080fd5b600060e08284031215610a0357600080fd5b610a0b610531565b90508135610a18816106ac565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261074f60c083016109de565b600060c08284031215610a6c57600080fd5b610a746105a0565b905081358152602082013560208201526040820135604082015260608201356060820152610aa4608083016106c4565b608082015260a082013561ffff81168114610abe57600080fd5b60a082015292915050565b6000818303610140811215610add57600080fd5b610ae561055a565b91506060811215610af557600080fd5b50610afe61057d565b8235610b09816106ac565b81526020830135610b19816106ac565b6020820152610b2a604084016109de565b60408201528152610b3e83606084016106d8565b602082015292915050565b6000818303610920811215610b5d57600080fd5b610b656105a0565b61042080831215610b7557600080fd5b610b7d61057d565b6102a080851215610b8d57600080fd5b610b956105c3565b873581526020808901359082015260408089013590820152606080890135908201526080808901359082015260a0808901359082015260c0808901359082015260e08089013590820152610100808901359082015261012080890135908201526101408089013590820152610160808901359082015261018080890135908201526101a080890135908201526101c080890135908201526101e08089013590820152610200808901359082015261022080890135908201526102408089013590820152610260808901359082015261028080890135908201528083529450610c7f8882890161096e565b602083015250610c938761034088016109f1565b60408201528252610ca686868301610a5a565b602083015250610cba856104e08601610ac9565b6040820152610ccd856106208601610ac9565b6060820152610ce08561076086016106d8565b6080820152610cf38561084086016106d8565b60a0820152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610d3f57610d3f610d16565b92915050565b600060018201610d5757610d57610d16565b5060010190565b600060208284031215610d7057600080fd5b8151610873816106ac56fea164736f6c6343000812000a",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c80639da317611161005a5780639da31761146100d0578063a95614d6146100e3578063f6266b74146100f657600080fd5b806308d8b1ac14610076578063507c8bd1146100a5575b600080fd5b61008961008436600461075a565b610109565b6040805192151583526020830191909152015b60405180910390f35b6100b86100b3366004610856565b61028b565b6040516001600160a01b03909116815260200161009c565b6100b86100de366004610856565b610381565b6100896100f136600461087a565b6103f3565b610089610104366004610b49565b610473565b60008082516000146102865760005b83518110156102805783818151811061013357610133610d00565b6020026020010151602001516020015160001480610172575083818151811061015e5761015e610d00565b602002602001015160200151604001516000145b8061019e575083818151811061018a5761018a610d00565b602002602001015160200151606001516000145b806101d057508381815181106101b6576101b6610d00565b6020026020010151602001516080015163ffffffff166000145b8061020257508381815181106101e8576101e8610d00565b60200260200101516020015160a0015163ffffffff166000145b80610234575083818151811061021a5761021a610d00565b60200260200101516020015160c0015163ffffffff166000145b1561023f5750915091565b83818151811061025157610251610d00565b602002602001015160200151602001518261026c9190610d2c565b91508061027881610d45565b915050610118565b50600191505b915091565b60006001600160a01b0382166102a357506000919050565b60405163bf40fac160e01b815260206004820152602160248201527f50726f78795f5f4f564d5f4c3143726f7373446f6d61696e4d657373656e67656044820152603960f91b60648201526001600160a01b0383169063bf40fac1906084015b602060405180830381865afa92505050801561033c575060408051601f3d908101601f1916820190925261033991810190610d5e565b60015b610379573d80801561036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b5060009392505050565b90505b919050565b60006001600160a01b03821661039957506000919050565b60405163bf40fac160e01b815260206004820152601b60248201527f50726f78795f5f4f564d5f4c315374616e64617264427269646765000000000060448201526001600160a01b0383169063bf40fac190606401610303565b60008082516000146102865760005b83518110156102805783818151811061041d5761041d610d00565b6020026020010151604001516000036104365750915091565b83818151811061044857610448610d00565b6020026020010151604001518261045f9190610d2c565b91508061046b81610d45565b915050610402565b6000808260a00151602001518360800151602001518460600151602001516020015185604001516020015160200151866020015160000151876000015160000151610120015188600001516000015161010001516104d19190610d2c565b6104db9190610d2c565b6104e59190610d2c565b6104ef9190610d2c565b6104f99190610d2c565b6105039190610d2c565b90508060000361051257915091565b60019150915091565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156105545761055461051b565b60405290565b6040805190810167ffffffffffffffff811182821017156105545761055461051b565b6040516060810167ffffffffffffffff811182821017156105545761055461051b565b60405160c0810167ffffffffffffffff811182821017156105545761055461051b565b6040516102a0810167ffffffffffffffff811182821017156105545761055461051b565b604051601f8201601f1916810167ffffffffffffffff811182821017156106105761061061051b565b604052919050565b600067ffffffffffffffff8211156106325761063261051b565b5060051b60200190565b600082601f83011261064d57600080fd5b813567ffffffffffffffff8111156106675761066761051b565b61067a601f8201601f19166020016105e7565b81815284602083860101111561068f57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146106c157600080fd5b50565b803563ffffffff8116811461037c57600080fd5b600060e082840312156106ea57600080fd5b6106f2610531565b905081356106ff816106ac565b8082525060208201356020820152604082013560408201526060820135606082015261072d608083016106c4565b608082015261073e60a083016106c4565b60a082015261074f60c083016106c4565b60c082015292915050565b6000602080838503121561076d57600080fd5b823567ffffffffffffffff8082111561078557600080fd5b818501915085601f83011261079957600080fd5b81356107ac6107a782610618565b6105e7565b81815260059190911b830184019084810190888311156107cb57600080fd5b8585015b83811015610849578035858111156107e75760008081fd5b8601610100818c03601f190112156107ff5760008081fd5b61080761055a565b88820135878111156108195760008081fd5b6108278d8b8386010161063c565b8252506108378c604084016106d8565b818a01528452509186019186016107cf565b5098975050505050505050565b60006020828403121561086857600080fd5b8135610873816106ac565b9392505050565b6000602080838503121561088d57600080fd5b823567ffffffffffffffff808211156108a557600080fd5b818501915085601f8301126108b957600080fd5b81356108c76107a782610618565b81815260059190911b830184019084810190888311156108e657600080fd5b8585015b83811015610849578035858111156109025760008081fd5b86016060818c03601f190181131561091a5760008081fd5b61092261057d565b89830135888111156109345760008081fd5b6109428e8c8387010161063c565b825250604080840135610954816106ac565b8b83015291909201359082015283529186019186016108ea565b600060a0828403121561098057600080fd5b60405160a0810181811067ffffffffffffffff821117156109a3576109a361051b565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b803562ffffff8116811461037c57600080fd5b600060e08284031215610a0357600080fd5b610a0b610531565b90508135610a18816106ac565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015261074f60c083016109de565b600060c08284031215610a6c57600080fd5b610a746105a0565b905081358152602082013560208201526040820135604082015260608201356060820152610aa4608083016106c4565b608082015260a082013561ffff81168114610abe57600080fd5b60a082015292915050565b6000818303610140811215610add57600080fd5b610ae561055a565b91506060811215610af557600080fd5b50610afe61057d565b8235610b09816106ac565b81526020830135610b19816106ac565b6020820152610b2a604084016109de565b60408201528152610b3e83606084016106d8565b602082015292915050565b6000818303610920811215610b5d57600080fd5b610b656105a0565b61042080831215610b7557600080fd5b610b7d61057d565b6102a080851215610b8d57600080fd5b610b956105c3565b873581526020808901359082015260408089013590820152606080890135908201526080808901359082015260a0808901359082015260c0808901359082015260e08089013590820152610100808901359082015261012080890135908201526101408089013590820152610160808901359082015261018080890135908201526101a080890135908201526101c080890135908201526101e08089013590820152610200808901359082015261022080890135908201526102408089013590820152610260808901359082015261028080890135908201528083529450610c7f8882890161096e565b602083015250610c938761034088016109f1565b60408201528252610ca686868301610a5a565b602083015250610cba856104e08601610ac9565b6040820152610ccd856106208601610ac9565b6060820152610ce08561076086016106d8565b6080820152610cf38561084086016106d8565b60a0820152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610d3f57610d3f610d16565b92915050565b600060018201610d5757610d57610d16565b5060010190565b600060208284031215610d7057600080fd5b8151610873816106ac56fea164736f6c6343000812000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "LibProject",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}