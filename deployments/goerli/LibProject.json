{
  "address": "0x2b13778E63f0f0Af46258841e45da3DE48A6482D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressManager",
          "type": "address"
        }
      ],
      "name": "getL1Bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressManager",
          "type": "address"
        }
      ],
      "name": "getL1CommunicationMessenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "vaultName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalAllocatedAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibProject.InitalParameterNonScheduleVault[]",
          "name": "customs",
          "type": "tuple[]"
        }
      ],
      "name": "validateNonScheduleVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "boolValidate",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "vaultName",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstClaimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "firstClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "roundIntervalTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct LibProject.InitalParameterScheduleVault",
              "name": "params",
              "type": "tuple"
            }
          ],
          "internalType": "struct LibProject.InitalParameterSchedule[]",
          "name": "customs",
          "type": "tuple[]"
        }
      ],
      "name": "validateScheduleVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "boolValidate",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "stosTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stosTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stosTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "stosTier4",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier1Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier2Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier3Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tier4Percents",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "total1roundSaleAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "total2roundSaleAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "saleTokenPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "payTokenPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hardcapAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "changeTOSPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startWhiteTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endWhiteTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "start1roundTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "end1roundTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "snapshotTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "start2roundTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "end2roundTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterPublicSaleVault",
                  "name": "vaultParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "claimCounts",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "secondClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "roundInterval",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterPublicSaleClaim",
                  "name": "claimParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "receiveAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "secondClaimTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "roundIntervalTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterVestingFundVault",
                  "name": "vestingParams",
                  "type": "tuple"
                }
              ],
              "internalType": "struct LibProject.InitalParameterPublicSale",
              "name": "publicSaleParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tosPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initSqrtPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "startTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "internalType": "struct LibProject.InitalParameterInitialLiquidityVault",
              "name": "initialVaultParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    }
                  ],
                  "internalType": "struct LibPool.PoolInfo",
                  "name": "poolParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAllocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "firstClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "roundIntervalTime",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterScheduleVault",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "internalType": "struct LibProject.InitalParameterLiquidityRewardVault",
              "name": "rewardTonTosPoolParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    }
                  ],
                  "internalType": "struct LibPool.PoolInfo",
                  "name": "poolParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "claimer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAllocatedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "firstClaimAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "firstClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "secondClaimTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "roundIntervalTime",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct LibProject.InitalParameterScheduleVault",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "internalType": "struct LibProject.InitalParameterLiquidityRewardVault",
              "name": "rewardProjectTosPoolParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstClaimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "firstClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "roundIntervalTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct LibProject.InitalParameterScheduleVault",
              "name": "tosAirdropParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAllocatedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstClaimAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "firstClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondClaimTime",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "roundIntervalTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct LibProject.InitalParameterScheduleVault",
              "name": "tonAirdropParams",
              "type": "tuple"
            }
          ],
          "internalType": "struct LibProject.TokamakVaults",
          "name": "tokamakVaults",
          "type": "tuple"
        }
      ],
      "name": "validateTokamakVaults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "boolValidate",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xd0e2ffb2ee0e65305fff5c33fefccae6f4c5c19c0eb80473639507e952cf44f7",
  "receipt": {
    "to": null,
    "from": "0xc1eba383D94c6021160042491A5dfaF1d82694E6",
    "contractAddress": "0x2b13778E63f0f0Af46258841e45da3DE48A6482D",
    "transactionIndex": 34,
    "gasUsed": "1232021",
    "logsBloom": "0x
    "blockHash": "0xed12178f48badfb3800537fc8305075ee913ae370766707543d398796167e395",
    "transactionHash": "0xd0e2ffb2ee0e65305fff5c33fefccae6f4c5c19c0eb80473639507e952cf44f7",
    "logs": [],
    "blockNumber": 10431023,
    "cumulativeGasUsed": "4728780",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "8a43d4b9f8c9edfee8826102ce6f8368",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressManager\",\"type\":\"address\"}],\"name\":\"getL1Bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressManager\",\"type\":\"address\"}],\"name\":\"getL1CommunicationMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibProject.InitalParameterNonScheduleVault[]\",\"name\":\"customs\",\"type\":\"tuple[]\"}],\"name\":\"validateNonScheduleVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"boolValidate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"vaultName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"params\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterSchedule[]\",\"name\":\"customs\",\"type\":\"tuple[]\"}],\"name\":\"validateScheduleVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"boolValidate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stosTier1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stosTier2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stosTier3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stosTier4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier1Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier2Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier3Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tier4Percents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total1roundSaleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total2roundSaleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardcapAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"changeTOSPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startWhiteTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endWhiteTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start1roundTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end1roundTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshotTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start2roundTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end2roundTime\",\"type\":\"uint256\"}],\"internalType\":\"struct LibProject.InitalParameterPublicSaleVault\",\"name\":\"vaultParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimCounts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundInterval\",\"type\":\"uint256\"}],\"internalType\":\"struct LibProject.InitalParameterPublicSaleClaim\",\"name\":\"claimParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiveAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundIntervalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct LibProject.InitalParameterVestingFundVault\",\"name\":\"vestingParams\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterPublicSale\",\"name\":\"publicSaleParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tosPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initSqrtPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"internalType\":\"struct LibProject.InitalParameterInitialLiquidityVault\",\"name\":\"initialVaultParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct LibPool.PoolInfo\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"params\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterLiquidityRewardVault\",\"name\":\"rewardTonTosPoolParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct LibPool.PoolInfo\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"params\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.InitalParameterLiquidityRewardVault\",\"name\":\"rewardProjectTosPoolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"tosAirdropParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstClaimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"firstClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"secondClaimTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"roundIntervalTime\",\"type\":\"uint32\"}],\"internalType\":\"struct LibProject.InitalParameterScheduleVault\",\"name\":\"tonAirdropParams\",\"type\":\"tuple\"}],\"internalType\":\"struct LibProject.TokamakVaults\",\"name\":\"tokamakVaults\",\"type\":\"tuple\"}],\"name\":\"validateTokamakVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"boolValidate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"LibProject\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibProject.sol\":\"LibProject\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":625},\"remappings\":[]},\"sources\":{\"contracts/libraries/LibPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n\\n/**\\n * @title LibProject\\n */\\nlibrary LibPool {\\n\\n    struct PoolInfo {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n}\",\"keccak256\":\"0x4f96e027ec71a0666159676b2426fbb90bd9de37076c03e225e533df8ff30ab5\",\"license\":\"MIT\"},\"contracts/libraries/LibProject.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./LibPool.sol\\\";\\n\\ninterface AddressManagerI {\\n    function getAddress(string memory _name) external view returns (address);\\n}\\n\\n/**\\n * @title LibProject\\n */\\nlibrary LibProject {\\n\\n    enum TOKEN_TYPE {\\n        ERC20_A,\\n        ERC20_B,\\n        ERC20_C,\\n        ERC20_D,\\n        NONE\\n    }\\n\\n    enum L2_TYPE {\\n        TOKAMAL_OPTIMISM,\\n        TOKAMAL_ZKEVM,\\n        NONE\\n    }\\n\\n    struct ProjectInfo {\\n        address projectOwner;\\n        address tokenOwner;\\n        address l1Token;\\n        address l2Token;\\n        address addressManager;\\n        uint256 initialTotalSupply;\\n        uint8 tokenType;\\n        uint8 l2Type;\\n        string projectName;\\n    }\\n\\n    struct L2Info {\\n        address l2TokenFactory;\\n        address l2ProjectManager;\\n        uint32 depositMinGasLimit;\\n        uint32 sendMsgMinGasLimit;\\n    }\\n\\n    struct L2ProjectInfo {\\n        uint256 projectId;\\n        address projectOwner;\\n        address l1Token;\\n        address l2Token;\\n        string projectName;\\n    }\\n\\n    struct TokamakVaults {\\n        InitalParameterPublicSale publicSaleParams;\\n        InitalParameterInitialLiquidityVault initialVaultParams;\\n        InitalParameterLiquidityRewardVault rewardTonTosPoolParams;\\n        InitalParameterLiquidityRewardVault rewardProjectTosPoolParams;\\n        InitalParameterScheduleVault tosAirdropParams;\\n        InitalParameterScheduleVault tonAirdropParams;\\n    }\\n\\n    struct InitalParameterPublicSale {\\n        InitalParameterPublicSaleVault vaultParams;\\n        InitalParameterPublicSaleClaim claimParams;\\n        InitalParameterVestingFundVault vestingParams;\\n    }\\n\\n    struct InitalParameterPublicSaleVault {\\n        uint256 stosTier1;\\n        uint256 stosTier2;\\n        uint256 stosTier3;\\n        uint256 stosTier4;\\n        uint256 tier1Percents;\\n        uint256 tier2Percents;\\n        uint256 tier3Percents;\\n        uint256 tier4Percents;\\n        uint256 total1roundSaleAmount;\\n        uint256 total2roundSaleAmount;\\n        uint256 saleTokenPrice;\\n        uint256 payTokenPrice;\\n        uint256 hardcapAmount;\\n        uint256 changeTOSPercent;\\n        uint256 startWhiteTime;\\n        uint256 endWhiteTime;\\n        uint256 start1roundTime;\\n        uint256 end1roundTime;\\n        uint256 snapshotTime;\\n        uint256 start2roundTime;\\n        uint256 end2roundTime;\\n    }\\n\\n    struct InitalParameterPublicSaleClaim {\\n        uint256 claimCounts;\\n        uint256 firstClaimPercent;\\n        uint256 firstClaimTime;\\n        uint256 secondClaimTime;\\n        uint256 roundInterval;\\n    }\\n\\n    struct InitalParameterVestingFundVault {\\n        address receiveAddress;\\n        uint256 totalClaimCount;\\n        uint256 firstClaimPercent;\\n        uint256 firstClaimTime;\\n        uint256 secondClaimTime;\\n        uint256 roundIntervalTime;\\n        uint24 fee;\\n    }\\n\\n    struct InitalParameterInitialLiquidityVault {\\n        uint256 totalAllocatedAmount;\\n        uint256 tosPrice;\\n        uint256 tokenPrice;\\n        uint256 initSqrtPrice;\\n        uint32 startTime;\\n        uint16 fee;\\n    }\\n\\n    struct InitalParameterLiquidityRewardVault {\\n        LibPool.PoolInfo poolParams;\\n        InitalParameterScheduleVault params;\\n    }\\n\\n    struct InitalParameterSchedule {\\n        string vaultName;\\n        InitalParameterScheduleVault params;\\n    }\\n\\n    struct InitalParameterScheduleVault {\\n        address claimer;\\n        uint256 totalAllocatedAmount;\\n        uint256 totalClaimCount;\\n        uint256 firstClaimAmount;\\n        uint32 firstClaimTime;\\n        uint32 secondClaimTime;\\n        uint32 roundIntervalTime;\\n    }\\n\\n    struct InitalParameterNonScheduleVault {\\n        string vaultName;\\n        address claimer;\\n        uint256 totalAllocatedAmount;\\n    }\\n\\n    struct PublicSaleSet {\\n        uint8 minPercents;\\n        uint8 maxPercents;\\n        uint256 delayTime;\\n    }\\n\\n    function getL1CommunicationMessenger(address addressManager) external view returns(address _address) {\\n        if (addressManager == address(0)) return address(0);\\n        try\\n            AddressManagerI(addressManager).getAddress('Proxy__OVM_L1CrossDomainMessenger') returns (address a) {\\n                _address = a;\\n        } catch (bytes memory ) {\\n            _address = address(0);\\n        }\\n    }\\n\\n    function getL1Bridge(address addressManager) external view returns(address _address) {\\n        if (addressManager == address(0)) return address(0);\\n        try\\n            AddressManagerI(addressManager).getAddress('Proxy__OVM_L1StandardBridge') returns (address a) {\\n                _address = a;\\n        } catch (bytes memory ) {\\n            _address = address(0);\\n        }\\n    }\\n\\n    function validateTokamakVaults(TokamakVaults memory tokamakVaults)\\n    public pure returns (bool boolValidate, uint256 totalAmount) {\\n\\n        if ((tokamakVaults.publicSaleParams.vaultParams.total1roundSaleAmount\\n            +tokamakVaults.publicSaleParams.vaultParams.total2roundSaleAmount) == 0 ||\\n            tokamakVaults.initialVaultParams.totalAllocatedAmount == 0 ||\\n            tokamakVaults.rewardTonTosPoolParams.params.totalAllocatedAmount == 0 ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.totalAllocatedAmount == 0 ||\\n            tokamakVaults.tosAirdropParams.totalAllocatedAmount == 0 ||\\n            tokamakVaults.tonAirdropParams.totalAllocatedAmount == 0\\n        ) return (boolValidate, totalAmount);\\n\\n        if (tokamakVaults.initialVaultParams.tosPrice == 0 ||\\n            tokamakVaults.initialVaultParams.tokenPrice == 0 ||\\n            tokamakVaults.initialVaultParams.initSqrtPrice == 0 ||\\n            tokamakVaults.initialVaultParams.startTime == 0 ||\\n            tokamakVaults.initialVaultParams.fee == 0) return (boolValidate, totalAmount);\\n\\n        if (tokamakVaults.rewardTonTosPoolParams.poolParams.token0 == address(0) ||\\n            tokamakVaults.rewardTonTosPoolParams.poolParams.token1 == address(0) ||\\n            tokamakVaults.rewardTonTosPoolParams.poolParams.fee == 0 ||\\n            tokamakVaults.rewardTonTosPoolParams.params.totalClaimCount == 0 ||\\n            tokamakVaults.rewardTonTosPoolParams.params.firstClaimAmount == 0 ||\\n            tokamakVaults.rewardTonTosPoolParams.params.firstClaimTime == 0 ||\\n            tokamakVaults.rewardTonTosPoolParams.params.secondClaimTime == 0 ||\\n            tokamakVaults.rewardTonTosPoolParams.params.roundIntervalTime == 0\\n            ) return (boolValidate, totalAmount);\\n\\n        if (tokamakVaults.rewardProjectTosPoolParams.poolParams.token0 == address(0) ||\\n            tokamakVaults.rewardProjectTosPoolParams.poolParams.token1 == address(0) ||\\n            tokamakVaults.rewardProjectTosPoolParams.poolParams.fee == 0 ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.totalClaimCount == 0 ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.firstClaimAmount == 0 ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.firstClaimTime == 0 ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.secondClaimTime == 0 ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.roundIntervalTime == 0\\n            ) return (boolValidate, totalAmount);\\n\\n        if (tokamakVaults.tosAirdropParams.totalClaimCount == 0 ||\\n            tokamakVaults.tosAirdropParams.firstClaimAmount == 0 ||\\n            tokamakVaults.tosAirdropParams.firstClaimTime == 0 ||\\n            tokamakVaults.tosAirdropParams.secondClaimTime == 0 ||\\n            tokamakVaults.tosAirdropParams.roundIntervalTime == 0\\n            ) return (boolValidate, totalAmount);\\n\\n        if (tokamakVaults.tonAirdropParams.totalClaimCount == 0 ||\\n            tokamakVaults.tonAirdropParams.firstClaimAmount == 0 ||\\n            tokamakVaults.tonAirdropParams.firstClaimTime == 0 ||\\n            tokamakVaults.tonAirdropParams.secondClaimTime == 0 ||\\n            tokamakVaults.tonAirdropParams.roundIntervalTime == 0\\n            ) return (boolValidate, totalAmount);\\n\\n        if (\\n            tokamakVaults.rewardTonTosPoolParams.params.secondClaimTime < tokamakVaults.rewardTonTosPoolParams.params.firstClaimTime ||\\n            tokamakVaults.rewardProjectTosPoolParams.params.secondClaimTime < tokamakVaults.rewardProjectTosPoolParams.params.firstClaimTime ||\\n            tokamakVaults.tosAirdropParams.secondClaimTime < tokamakVaults.tosAirdropParams.firstClaimTime ||\\n            tokamakVaults.tonAirdropParams.secondClaimTime < tokamakVaults.tonAirdropParams.firstClaimTime\\n            )\\n            return (boolValidate, totalAmount);\\n\\n        if (\\n            tokamakVaults.publicSaleParams.vaultParams.stosTier1 == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.stosTier2 == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.stosTier3 == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.stosTier4 == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.tier1Percents == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.tier2Percents == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.tier3Percents == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.tier4Percents == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.total1roundSaleAmount == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.total2roundSaleAmount == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.saleTokenPrice == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.payTokenPrice == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.changeTOSPercent == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.startWhiteTime == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.endWhiteTime == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.start1roundTime == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.end1roundTime == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.snapshotTime == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.start2roundTime == 0 ||\\n            tokamakVaults.publicSaleParams.vaultParams.end2roundTime == 0 ||\\n            tokamakVaults.publicSaleParams.claimParams.claimCounts == 0 ||\\n            tokamakVaults.publicSaleParams.claimParams.firstClaimPercent == 0 ||\\n            tokamakVaults.publicSaleParams.claimParams.firstClaimTime == 0 ||\\n            tokamakVaults.publicSaleParams.claimParams.secondClaimTime == 0 ||\\n            tokamakVaults.publicSaleParams.claimParams.roundInterval == 0 ||\\n            tokamakVaults.publicSaleParams.vestingParams.totalClaimCount == 0 ||\\n            tokamakVaults.publicSaleParams.vestingParams.firstClaimPercent == 0 ||\\n            tokamakVaults.publicSaleParams.vestingParams.firstClaimTime == 0 ||\\n            tokamakVaults.publicSaleParams.vestingParams.secondClaimTime == 0 ||\\n            tokamakVaults.publicSaleParams.vestingParams.roundIntervalTime == 0 ||\\n            tokamakVaults.publicSaleParams.vestingParams.fee == 0\\n        ) return (boolValidate, totalAmount);\\n\\n        if (\\n            (tokamakVaults.publicSaleParams.vaultParams.tier1Percents +\\n            tokamakVaults.publicSaleParams.vaultParams.tier2Percents +\\n            tokamakVaults.publicSaleParams.vaultParams.tier3Percents +\\n            tokamakVaults.publicSaleParams.vaultParams.tier4Percents) != 10000\\n        ) return (boolValidate, totalAmount);\\n\\n        if (\\n            (tokamakVaults.publicSaleParams.vaultParams.total1roundSaleAmount +\\n            tokamakVaults.publicSaleParams.vaultParams.total2roundSaleAmount) < (\\n                tokamakVaults.publicSaleParams.vaultParams.hardcapAmount *\\n                tokamakVaults.publicSaleParams.vaultParams.payTokenPrice /\\n                tokamakVaults.publicSaleParams.vaultParams.saleTokenPrice\\n            )\\n        ) return (boolValidate, totalAmount);\\n\\n        if (\\n            tokamakVaults.publicSaleParams.vaultParams.endWhiteTime < tokamakVaults.publicSaleParams.vaultParams.startWhiteTime ||\\n            tokamakVaults.publicSaleParams.vaultParams.start1roundTime < tokamakVaults.publicSaleParams.vaultParams.endWhiteTime ||\\n            tokamakVaults.publicSaleParams.vaultParams.end1roundTime < tokamakVaults.publicSaleParams.vaultParams.start1roundTime ||\\n            tokamakVaults.publicSaleParams.vaultParams.start2roundTime < tokamakVaults.publicSaleParams.vaultParams.end1roundTime ||\\n            tokamakVaults.publicSaleParams.vaultParams.end2roundTime < tokamakVaults.publicSaleParams.vaultParams.start2roundTime ||\\n            tokamakVaults.publicSaleParams.claimParams.firstClaimTime < tokamakVaults.publicSaleParams.vaultParams.end2roundTime ||\\n            tokamakVaults.publicSaleParams.claimParams.secondClaimTime < tokamakVaults.publicSaleParams.claimParams.firstClaimTime\\n        ) return (boolValidate, totalAmount);\\n\\n        if (\\n            tokamakVaults.publicSaleParams.vestingParams.secondClaimTime < tokamakVaults.publicSaleParams.vestingParams.firstClaimTime\\n        ) return (boolValidate, totalAmount);\\n\\n        totalAmount = tokamakVaults.publicSaleParams.vaultParams.total1roundSaleAmount +\\n                    tokamakVaults.publicSaleParams.vaultParams.total2roundSaleAmount +\\n                    tokamakVaults.initialVaultParams.totalAllocatedAmount +\\n                    tokamakVaults.rewardTonTosPoolParams.params.totalAllocatedAmount +\\n                    tokamakVaults.rewardProjectTosPoolParams.params.totalAllocatedAmount +\\n                    tokamakVaults.tosAirdropParams.totalAllocatedAmount +\\n                    tokamakVaults.tonAirdropParams.totalAllocatedAmount ;\\n\\n        if (totalAmount == 0) return (boolValidate, totalAmount);\\n\\n        boolValidate = true;\\n    }\\n\\n    function validateScheduleVault(\\n        InitalParameterSchedule[] memory customs\\n    ) public pure returns (bool boolValidate, uint256 totalAmount) {\\n\\n        if (customs.length != 0) {\\n            for(uint256 i = 0; i < customs.length; i++){\\n                if (customs[i].params.totalAllocatedAmount == 0 ||\\n                    customs[i].params.totalClaimCount == 0 ||\\n                    customs[i].params.firstClaimAmount == 0 ||\\n                    customs[i].params.firstClaimTime == 0 ||\\n                    customs[i].params.secondClaimTime == 0 ||\\n                    customs[i].params.roundIntervalTime == 0 ||\\n                    (customs[i].params.secondClaimTime < customs[i].params.firstClaimTime)\\n                    ) return (boolValidate, totalAmount);\\n\\n                totalAmount += customs[i].params.totalAllocatedAmount;\\n            }\\n            boolValidate = true;\\n        }\\n    }\\n\\n    function validateNonScheduleVault(\\n        InitalParameterNonScheduleVault[] memory customs\\n    ) public pure returns (bool boolValidate, uint256 totalAmount) {\\n\\n        if (customs.length != 0) {\\n            for(uint256 i =0 ; i < customs.length; i++){\\n                if (customs[i].totalAllocatedAmount == 0) return (boolValidate, totalAmount);\\n                totalAmount += customs[i].totalAllocatedAmount;\\n            }\\n            boolValidate = true;\\n        }\\n    }\\n\\n}\",\"keccak256\":\"0x703396a30650c65636770ff0712ade52385643050c6d5f2738924c4a03b5bf53\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x61154f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c80639da317611161005a5780639da31761146100d0578063a95614d6146100e3578063f6266b74146100f657600080fd5b806308d8b1ac14610076578063507c8bd1146100a5575b600080fd5b610089610084366004610ee8565b610109565b6040805192151583526020830191909152015b60405180910390f35b6100b86100b3366004610fe4565b6102e3565b6040516001600160a01b03909116815260200161009c565b6100b86100de366004610fe4565b6103d9565b6100896100f1366004611008565b61044b565b6100896101043660046112d7565b6104cb565b60008082516000146102de5760005b83518110156102d8578381815181106101335761013361148e565b6020026020010151602001516020015160001480610172575083818151811061015e5761015e61148e565b602002602001015160200151604001516000145b8061019e575083818151811061018a5761018a61148e565b602002602001015160200151606001516000145b806101d057508381815181106101b6576101b661148e565b6020026020010151602001516080015163ffffffff166000145b8061020257508381815181106101e8576101e861148e565b60200260200101516020015160a0015163ffffffff166000145b80610234575083818151811061021a5761021a61148e565b60200260200101516020015160c0015163ffffffff166000145b8061028c575083818151811061024c5761024c61148e565b6020026020010151602001516080015163ffffffff168482815181106102745761027461148e565b60200260200101516020015160a0015163ffffffff16105b156102975750915091565b8381815181106102a9576102a961148e565b60200260200101516020015160200151826102c491906114ba565b9150806102d0816114d3565b915050610118565b50600191505b915091565b60006001600160a01b0382166102fb57506000919050565b60405163bf40fac160e01b815260206004820152602160248201527f50726f78795f5f4f564d5f4c3143726f7373446f6d61696e4d657373656e67656044820152603960f91b60648201526001600160a01b0383169063bf40fac1906084015b602060405180830381865afa925050508015610394575060408051601f3d908101601f19168201909252610391918101906114ec565b60015b6103d1573d8080156103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5060009392505050565b90505b919050565b60006001600160a01b0382166103f157506000919050565b60405163bf40fac160e01b815260206004820152601b60248201527f50726f78795f5f4f564d5f4c315374616e64617264427269646765000000000060448201526001600160a01b0383169063bf40fac19060640161035b565b60008082516000146102de5760005b83518110156102d8578381815181106104755761047561148e565b60200260200101516040015160000361048e5750915091565b8381815181106104a0576104a061148e565b602002602001015160400151826104b791906114ba565b9150806104c3816114d3565b91505061045a565b8051516101208101516101009091015160009182916104ea91906114ba565b15806104f95750602083015151155b806105105750826040015160200151602001516000145b806105275750826060015160200151602001516000145b806105385750608083015160200151155b80610549575060a083015160200151155b1561055357915091565b6020808401510151158061056d5750602083015160400151155b8061057e5750602083015160600151155b80610595575060208301516080015163ffffffff16155b806105aa5750602083015160a0015161ffff16155b156105b457915091565b604083015151516001600160a01b031615806105e05750604083015151602001516001600160a01b0316155b806105f6575060408084015151015162ffffff16155b8061060a5750604080840151602001510151155b8061061f575060408301516020015160600151155b8061063a57506040830151602001516080015163ffffffff16155b80610655575060408301516020015160a0015163ffffffff16155b80610670575060408301516020015160c0015163ffffffff16155b1561067a57915091565b606083015151516001600160a01b031615806106a65750606083015151602001516001600160a01b0316155b806106bd57506060830151516040015162ffffff16155b806106d2575060608301516020015160400151155b806106e65750606080840151602001510151155b8061070157506060830151602001516080015163ffffffff16155b8061071c575060608301516020015160a0015163ffffffff16155b80610737575060608301516020015160c0015163ffffffff16155b1561074157915091565b608083015160400151158061075c5750608083015160600151155b806107725750608080840151015163ffffffff16155b806107895750608083015160a0015163ffffffff16155b806107a05750608083015160c0015163ffffffff16155b156107aa57915091565b60a08301516040015115806107c5575060a083015160600151155b806107dc575060a08301516080015163ffffffff16155b806107f2575060a080840151015163ffffffff16155b80610809575060a083015160c0015163ffffffff16155b1561081357915091565b604083015160200151608081015160a09091015163ffffffff918216911610806108585750606083015160200151608081015160a09091015163ffffffff9182169116105b8061087e575082608001516080015163ffffffff16836080015160a0015163ffffffff16105b806108a457508260a001516080015163ffffffff168360a0015160a0015163ffffffff16105b156108ae57915091565b8251515115806108c2575082515160200151155b806108d1575082515160400151155b806108e0575082515160600151155b806108ef575082515160800151155b806108fe575082515160a00151155b8061090d575082515160c00151155b8061091c575082515160e00151155b8061092c57508251516101000151155b8061093c57508251516101200151155b8061094c57508251516101400151155b8061095c57508251516101600151155b8061096c57508251516101a00151155b8061097c57508251516101c00151155b8061098c57508251516101e00151155b8061099c57508251516102000151155b806109ac57508251516102200151155b806109bc57508251516102400151155b806109cc57508251516102600151155b806109dc57508251516102800151155b806109eb575082516020015151155b806109fd575082516020908101510151155b80610a0f575082516020015160400151155b80610a21575082516020015160600151155b80610a33575082516020015160800151155b80610a45575082516040015160200151155b80610a57575082516040908101510151155b80610a69575082516040015160600151155b80610a7b575082516040015160800151155b80610a8d575082516040015160a00151155b80610aa4575082516040015160c0015162ffffff16155b15610aae57915091565b82515160e081015160c082015160a083015160809093015191929091610ad491906114ba565b610ade91906114ba565b610ae891906114ba565b61271014610af557915091565b825151610140810151610160820151610180909201519091610b1691611509565b610b209190611520565b83515161012081015161010090910151610b3a91906114ba565b1015610b4557915091565b8251516101c08101516101e0909101511080610b6e57508251516101e081015161020090910151105b80610b86575082515161020081015161022090910151105b80610b9e575082515161022081015161026090910151105b80610bb6575082515161026081015161028090910151105b80610bd1575082518051610280015160209091015160400151105b80610bea57508251602001516040810151606090910151105b15610bf457915091565b82516040015160608101516080909101511015610c1057915091565b60a083015160209081015160808501518201516060860151830151830151604087015184015184015193870151518751516101208101516101009091015194959394929392610c5f91906114ba565b610c6991906114ba565b610c7391906114ba565b610c7d91906114ba565b610c8791906114ba565b610c9191906114ba565b905080600003610ca057915091565b60019150915091565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b60405290565b6040805190810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b6040516060810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b60405160c0810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b6040516102a0810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d9e57610d9e610ca9565b604052919050565b600067ffffffffffffffff821115610dc057610dc0610ca9565b5060051b60200190565b600082601f830112610ddb57600080fd5b813567ffffffffffffffff811115610df557610df5610ca9565b610e08601f8201601f1916602001610d75565b818152846020838601011115610e1d57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b0381168114610e4f57600080fd5b50565b803563ffffffff811681146103d457600080fd5b600060e08284031215610e7857600080fd5b610e80610cbf565b90508135610e8d81610e3a565b80825250602082013560208201526040820135604082015260608201356060820152610ebb60808301610e52565b6080820152610ecc60a08301610e52565b60a0820152610edd60c08301610e52565b60c082015292915050565b60006020808385031215610efb57600080fd5b823567ffffffffffffffff80821115610f1357600080fd5b818501915085601f830112610f2757600080fd5b8135610f3a610f3582610da6565b610d75565b81815260059190911b83018401908481019088831115610f5957600080fd5b8585015b83811015610fd757803585811115610f755760008081fd5b8601610100818c03601f19011215610f8d5760008081fd5b610f95610ce8565b8882013587811115610fa75760008081fd5b610fb58d8b83860101610dca565b825250610fc58c60408401610e66565b818a0152845250918601918601610f5d565b5098975050505050505050565b600060208284031215610ff657600080fd5b813561100181610e3a565b9392505050565b6000602080838503121561101b57600080fd5b823567ffffffffffffffff8082111561103357600080fd5b818501915085601f83011261104757600080fd5b8135611055610f3582610da6565b81815260059190911b8301840190848101908883111561107457600080fd5b8585015b83811015610fd7578035858111156110905760008081fd5b86016060818c03601f19018113156110a85760008081fd5b6110b0610d0b565b89830135888111156110c25760008081fd5b6110d08e8c83870101610dca565b8252506040808401356110e281610e3a565b8b8301529190920135908201528352918601918601611078565b600060a0828403121561110e57600080fd5b60405160a0810181811067ffffffffffffffff8211171561113157611131610ca9565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b803562ffffff811681146103d457600080fd5b600060e0828403121561119157600080fd5b611199610cbf565b905081356111a681610e3a565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152610edd60c0830161116c565b600060c082840312156111fa57600080fd5b611202610d2e565b90508135815260208201356020820152604082013560408201526060820135606082015261123260808301610e52565b608082015260a082013561ffff8116811461124c57600080fd5b60a082015292915050565b600081830361014081121561126b57600080fd5b611273610ce8565b9150606081121561128357600080fd5b5061128c610d0b565b823561129781610e3a565b815260208301356112a781610e3a565b60208201526112b86040840161116c565b604082015281526112cc8360608401610e66565b602082015292915050565b60008183036109208112156112eb57600080fd5b6112f3610d2e565b6104208083121561130357600080fd5b61130b610d0b565b6102a08085121561131b57600080fd5b611323610d51565b873581526020808901359082015260408089013590820152606080890135908201526080808901359082015260a0808901359082015260c0808901359082015260e08089013590820152610100808901359082015261012080890135908201526101408089013590820152610160808901359082015261018080890135908201526101a080890135908201526101c080890135908201526101e0808901359082015261020080890135908201526102208089013590820152610240808901359082015261026080890135908201526102808089013590820152808352945061140d888289016110fc565b60208301525061142187610340880161117f565b60408201528252611434868683016111e8565b602083015250611448856104e08601611257565b604082015261145b856106208601611257565b606082015261146e856107608601610e66565b6080820152611481856108408601610e66565b60a0820152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156114cd576114cd6114a4565b92915050565b6000600182016114e5576114e56114a4565b5060010190565b6000602082840312156114fe57600080fd5b815161100181610e3a565b80820281158282048414176114cd576114cd6114a4565b60008261153d57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c6343000812000a",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c80639da317611161005a5780639da31761146100d0578063a95614d6146100e3578063f6266b74146100f657600080fd5b806308d8b1ac14610076578063507c8bd1146100a5575b600080fd5b610089610084366004610ee8565b610109565b6040805192151583526020830191909152015b60405180910390f35b6100b86100b3366004610fe4565b6102e3565b6040516001600160a01b03909116815260200161009c565b6100b86100de366004610fe4565b6103d9565b6100896100f1366004611008565b61044b565b6100896101043660046112d7565b6104cb565b60008082516000146102de5760005b83518110156102d8578381815181106101335761013361148e565b6020026020010151602001516020015160001480610172575083818151811061015e5761015e61148e565b602002602001015160200151604001516000145b8061019e575083818151811061018a5761018a61148e565b602002602001015160200151606001516000145b806101d057508381815181106101b6576101b661148e565b6020026020010151602001516080015163ffffffff166000145b8061020257508381815181106101e8576101e861148e565b60200260200101516020015160a0015163ffffffff166000145b80610234575083818151811061021a5761021a61148e565b60200260200101516020015160c0015163ffffffff166000145b8061028c575083818151811061024c5761024c61148e565b6020026020010151602001516080015163ffffffff168482815181106102745761027461148e565b60200260200101516020015160a0015163ffffffff16105b156102975750915091565b8381815181106102a9576102a961148e565b60200260200101516020015160200151826102c491906114ba565b9150806102d0816114d3565b915050610118565b50600191505b915091565b60006001600160a01b0382166102fb57506000919050565b60405163bf40fac160e01b815260206004820152602160248201527f50726f78795f5f4f564d5f4c3143726f7373446f6d61696e4d657373656e67656044820152603960f91b60648201526001600160a01b0383169063bf40fac1906084015b602060405180830381865afa925050508015610394575060408051601f3d908101601f19168201909252610391918101906114ec565b60015b6103d1573d8080156103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5060009392505050565b90505b919050565b60006001600160a01b0382166103f157506000919050565b60405163bf40fac160e01b815260206004820152601b60248201527f50726f78795f5f4f564d5f4c315374616e64617264427269646765000000000060448201526001600160a01b0383169063bf40fac19060640161035b565b60008082516000146102de5760005b83518110156102d8578381815181106104755761047561148e565b60200260200101516040015160000361048e5750915091565b8381815181106104a0576104a061148e565b602002602001015160400151826104b791906114ba565b9150806104c3816114d3565b91505061045a565b8051516101208101516101009091015160009182916104ea91906114ba565b15806104f95750602083015151155b806105105750826040015160200151602001516000145b806105275750826060015160200151602001516000145b806105385750608083015160200151155b80610549575060a083015160200151155b1561055357915091565b6020808401510151158061056d5750602083015160400151155b8061057e5750602083015160600151155b80610595575060208301516080015163ffffffff16155b806105aa5750602083015160a0015161ffff16155b156105b457915091565b604083015151516001600160a01b031615806105e05750604083015151602001516001600160a01b0316155b806105f6575060408084015151015162ffffff16155b8061060a5750604080840151602001510151155b8061061f575060408301516020015160600151155b8061063a57506040830151602001516080015163ffffffff16155b80610655575060408301516020015160a0015163ffffffff16155b80610670575060408301516020015160c0015163ffffffff16155b1561067a57915091565b606083015151516001600160a01b031615806106a65750606083015151602001516001600160a01b0316155b806106bd57506060830151516040015162ffffff16155b806106d2575060608301516020015160400151155b806106e65750606080840151602001510151155b8061070157506060830151602001516080015163ffffffff16155b8061071c575060608301516020015160a0015163ffffffff16155b80610737575060608301516020015160c0015163ffffffff16155b1561074157915091565b608083015160400151158061075c5750608083015160600151155b806107725750608080840151015163ffffffff16155b806107895750608083015160a0015163ffffffff16155b806107a05750608083015160c0015163ffffffff16155b156107aa57915091565b60a08301516040015115806107c5575060a083015160600151155b806107dc575060a08301516080015163ffffffff16155b806107f2575060a080840151015163ffffffff16155b80610809575060a083015160c0015163ffffffff16155b1561081357915091565b604083015160200151608081015160a09091015163ffffffff918216911610806108585750606083015160200151608081015160a09091015163ffffffff9182169116105b8061087e575082608001516080015163ffffffff16836080015160a0015163ffffffff16105b806108a457508260a001516080015163ffffffff168360a0015160a0015163ffffffff16105b156108ae57915091565b8251515115806108c2575082515160200151155b806108d1575082515160400151155b806108e0575082515160600151155b806108ef575082515160800151155b806108fe575082515160a00151155b8061090d575082515160c00151155b8061091c575082515160e00151155b8061092c57508251516101000151155b8061093c57508251516101200151155b8061094c57508251516101400151155b8061095c57508251516101600151155b8061096c57508251516101a00151155b8061097c57508251516101c00151155b8061098c57508251516101e00151155b8061099c57508251516102000151155b806109ac57508251516102200151155b806109bc57508251516102400151155b806109cc57508251516102600151155b806109dc57508251516102800151155b806109eb575082516020015151155b806109fd575082516020908101510151155b80610a0f575082516020015160400151155b80610a21575082516020015160600151155b80610a33575082516020015160800151155b80610a45575082516040015160200151155b80610a57575082516040908101510151155b80610a69575082516040015160600151155b80610a7b575082516040015160800151155b80610a8d575082516040015160a00151155b80610aa4575082516040015160c0015162ffffff16155b15610aae57915091565b82515160e081015160c082015160a083015160809093015191929091610ad491906114ba565b610ade91906114ba565b610ae891906114ba565b61271014610af557915091565b825151610140810151610160820151610180909201519091610b1691611509565b610b209190611520565b83515161012081015161010090910151610b3a91906114ba565b1015610b4557915091565b8251516101c08101516101e0909101511080610b6e57508251516101e081015161020090910151105b80610b86575082515161020081015161022090910151105b80610b9e575082515161022081015161026090910151105b80610bb6575082515161026081015161028090910151105b80610bd1575082518051610280015160209091015160400151105b80610bea57508251602001516040810151606090910151105b15610bf457915091565b82516040015160608101516080909101511015610c1057915091565b60a083015160209081015160808501518201516060860151830151830151604087015184015184015193870151518751516101208101516101009091015194959394929392610c5f91906114ba565b610c6991906114ba565b610c7391906114ba565b610c7d91906114ba565b610c8791906114ba565b610c9191906114ba565b905080600003610ca057915091565b60019150915091565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b60405290565b6040805190810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b6040516060810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b60405160c0810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b6040516102a0810167ffffffffffffffff81118282101715610ce257610ce2610ca9565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d9e57610d9e610ca9565b604052919050565b600067ffffffffffffffff821115610dc057610dc0610ca9565b5060051b60200190565b600082601f830112610ddb57600080fd5b813567ffffffffffffffff811115610df557610df5610ca9565b610e08601f8201601f1916602001610d75565b818152846020838601011115610e1d57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b0381168114610e4f57600080fd5b50565b803563ffffffff811681146103d457600080fd5b600060e08284031215610e7857600080fd5b610e80610cbf565b90508135610e8d81610e3a565b80825250602082013560208201526040820135604082015260608201356060820152610ebb60808301610e52565b6080820152610ecc60a08301610e52565b60a0820152610edd60c08301610e52565b60c082015292915050565b60006020808385031215610efb57600080fd5b823567ffffffffffffffff80821115610f1357600080fd5b818501915085601f830112610f2757600080fd5b8135610f3a610f3582610da6565b610d75565b81815260059190911b83018401908481019088831115610f5957600080fd5b8585015b83811015610fd757803585811115610f755760008081fd5b8601610100818c03601f19011215610f8d5760008081fd5b610f95610ce8565b8882013587811115610fa75760008081fd5b610fb58d8b83860101610dca565b825250610fc58c60408401610e66565b818a0152845250918601918601610f5d565b5098975050505050505050565b600060208284031215610ff657600080fd5b813561100181610e3a565b9392505050565b6000602080838503121561101b57600080fd5b823567ffffffffffffffff8082111561103357600080fd5b818501915085601f83011261104757600080fd5b8135611055610f3582610da6565b81815260059190911b8301840190848101908883111561107457600080fd5b8585015b83811015610fd7578035858111156110905760008081fd5b86016060818c03601f19018113156110a85760008081fd5b6110b0610d0b565b89830135888111156110c25760008081fd5b6110d08e8c83870101610dca565b8252506040808401356110e281610e3a565b8b8301529190920135908201528352918601918601611078565b600060a0828403121561110e57600080fd5b60405160a0810181811067ffffffffffffffff8211171561113157611131610ca9565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b803562ffffff811681146103d457600080fd5b600060e0828403121561119157600080fd5b611199610cbf565b905081356111a681610e3a565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152610edd60c0830161116c565b600060c082840312156111fa57600080fd5b611202610d2e565b90508135815260208201356020820152604082013560408201526060820135606082015261123260808301610e52565b608082015260a082013561ffff8116811461124c57600080fd5b60a082015292915050565b600081830361014081121561126b57600080fd5b611273610ce8565b9150606081121561128357600080fd5b5061128c610d0b565b823561129781610e3a565b815260208301356112a781610e3a565b60208201526112b86040840161116c565b604082015281526112cc8360608401610e66565b602082015292915050565b60008183036109208112156112eb57600080fd5b6112f3610d2e565b6104208083121561130357600080fd5b61130b610d0b565b6102a08085121561131b57600080fd5b611323610d51565b873581526020808901359082015260408089013590820152606080890135908201526080808901359082015260a0808901359082015260c0808901359082015260e08089013590820152610100808901359082015261012080890135908201526101408089013590820152610160808901359082015261018080890135908201526101a080890135908201526101c080890135908201526101e0808901359082015261020080890135908201526102208089013590820152610240808901359082015261026080890135908201526102808089013590820152808352945061140d888289016110fc565b60208301525061142187610340880161117f565b60408201528252611434868683016111e8565b602083015250611448856104e08601611257565b604082015261145b856106208601611257565b606082015261146e856107608601610e66565b6080820152611481856108408601610e66565b60a0820152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156114cd576114cd6114a4565b92915050565b6000600182016114e5576114e56114a4565b5060010190565b6000602082840312156114fe57600080fd5b815161100181610e3a565b80820281158282048414176114cd576114cd6114a4565b60008261153d57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c6343000812000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "LibProject",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}